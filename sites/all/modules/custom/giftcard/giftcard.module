<?php

function giftcard_init(){
   
    drupal_add_css(drupal_get_path('module', 'giftcard') . '/giftcard.css');
    drupal_add_js(drupal_get_path('module', 'giftcard') . '/giftcard.js');
  
}

function giftcard_permission() {
  return array(
    'administer giftcard' => array(
      'title' => t('Administer Gift Card'),
      'description' => t('Perform administration tasks for Gift Card.'),
    ),
  );
}

function giftcard_menu() {
  $items = array(); 

  $items['admin/giftcard'] = array( 
    'title' => t('Gift Card'), 
    'description' => '', 
    // 'page callback' => 'giftcard_list',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('giftcard_list_form'),
    'access arguments' => array("administer giftcard"),
    'type' =>  MENU_NORMAL_ITEM,
  );

  $items['admin/giftcard/list'] = array( 
    'title' => t('Gift Card'), 
    'description' => '', 
    // 'page callback' => 'giftcard_list',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('giftcard_list_form'),
    'access arguments' => array("administer giftcard"),
    'type' =>  MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/giftcard/list/excel'] = array(
    'page callback' => 'giftcard_export_excel',
    'access argument' =>  array('administer giftcard'),
    'type'  => MENU_CALLBACK,
    // 'access callback' => 'user_access',
    // 'file'  => 'download_csv.inc',
  );
  $items['admin/giftcard/list/addfunds'] = array(
    'title' => t('Gift Card adds funds'), 
    'description' => '', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('giftcard_admin_addfunds_form'),
    'access arguments' => array("administer giftcard"),
    'type' =>  MENU_CALLBACK,
  );
  $items['admin/giftcard/list/updatestartdate'] = array(
    'title' => t('Gift Card adds funds'), 
    'description' => '', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('giftcard_admin_update_startdate_form'),
    'access arguments' => array("administer giftcard"),
    'type' =>  MENU_CALLBACK,
  );

  $items['admin/giftcard/add'] = array( 
    'title' => t('Gift Card Create'), 
    'description' => '', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('giftcard_add_form'),
    'access arguments' => array("administer giftcard"),
    'type' => MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/giftcard/view'] = array( 
    'title' => t('Purchases'), 
    'description' => '', 
    'page callback' => 'giftcard_list_view',
    'access arguments' => array("administer giftcard"),
    'type' => MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );


  $items['admin/giftcard/edit'] = array( 
    'title' => t('Gift Card Update'), 
    'description' => '', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array("giftcard_list_edit_form"),
    'access arguments' => array("administer giftcard"),
    'type' => MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );

$items['admin/giftcard/orders'] = array( 
    'title' => t('Purchases'), 
    'description' => '', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('giftcard_list_orders_form'),
    'access arguments' => array("administer giftcard"),
    'type' => MENU_LOCAL_TASK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );

$items['admin/giftcard/orders/add'] = array( 
    'title' => t('Register Purchase'), 
    'description' => '', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('giftcard_list_orders_add_form'),
    'access arguments' => array("administer giftcard"),
    'type' => MENU_LOCAL_TASK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );


$items['admin/giftcard/transaction'] = array( 
    'title' => t('Transactions'), 
    'description' => '', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('giftcard_list_transaction_form'),
    'access arguments' => array("administer giftcard"),
    'type' => MENU_LOCAL_TASK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );

$items['admin/giftcard/transaction/view'] = array( 
    'title' => t('Purchases'), 
    'description' => '', 
    'page callback' => 'giftcard_list_transaction_view',
    'access arguments' => array("administer giftcard"),
    'type' => MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/giftcard/transaction/edit'] = array( 
    'title' => t('Purchases'), 
    'description' => '', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array("giftcard_list_transaction_edit_form"),
    'access arguments' => array("administer giftcard"),
    'type' => MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/giftcard/transaction/cancel'] = array( 
    'title' => t('Purchases'), 
    'description' => '', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array("giftcard_list_transaction_cancel_form"),
    'access arguments' => array("administer giftcard"),
    'type' => MENU_CALLBACK,
  );
  
  $items['admin/giftcard/settings'] = array( 
    'title' => t('Settings'), 
    'description' => '', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('giftcard_settings_form'),
    'access arguments' => array("administer giftcard"),
    'type' => MENU_LOCAL_TASK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/giftcard/orders/view'] = array( 
    'title' => t('Purchases'), 
    'description' => '', 
    'page callback' => 'giftcard_list_orders_view',
    'access arguments' => array("administer giftcard"),
    'type' => MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/giftcard/orders/edit'] = array( 
    'title' => t('Purchase Update'), 
    'description' => '', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array("giftcard_list_orders_edit_form"),
    'access arguments' => array("administer giftcard"),
    'type' => MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/giftcard/orders/cancel'] = array( 
    'title' => t('Purchases'), 
    'description' => '', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array("giftcard_list_orders_cancel_form"),
    'access arguments' => array("administer giftcard"),
    'type' => MENU_CALLBACK,
  );

  $items['login'] = array( 
    'title' => t('Login / Register'), 
    'description' => '', 
    'page callback' => 'giftcard_login',
    // 'page arguments' => array('giftcard_add_form'),
    'access arguments' => array('access content'),
    'type' =>  MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );

$items['giftcard/order'] = array( 
    'title' => t('Order'), 
    'description' => '', 
     'page callback' => 'drupal_get_form',
    'page arguments' => array('giftcard_order_form'),
    'access arguments' => array('access content'),
    'type' =>  MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );


$items['myaccount'] = array( 
    'title' => t('My Account'), 
    'description' => '', 
    'page callback' => 'giftcard_page_myaccount',
    'access arguments' => array('access content'),
    'type' =>  MENU_CALLBACK,
  );

$items['myaccount/purchase'] = array( 
    'title' => t('My Purchases'), 
    'description' => '', 
     'page callback' => 'giftcard_page_purchase',
    // 'page arguments' => array('giftcard_order_form'),
    'access arguments' => array('access content'),
    'type' =>  MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );
$items['myaccount/register-giftcard'] = array( 
    'title' => t('My Purchases'), 
    'description' => '', 
    'page callback' => 'drupal_get_form',
    'page arguments' => array('giftcard_page_register_giftcard_form'),
    'access arguments' => array('access content'),
    'type' =>  MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );


$items['myaccount/addfunds'] = array( 
    'title' => t('Add Funds to Gift Card'), 
    'description' => '', 
     'page callback' => 'giftcard_page_add_funds',
    // 'page arguments' => array('giftcard_order_form'),
    'access arguments' => array('access content'),
    'type' =>  MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );

$items['myaccount/addfunds/payment'] = array( 
    'title' => t('Add Funds to Gift Card'), 
    'description' => '', 
     'page callback' => 'giftcard_page_add_funds_payment',
    // 'page arguments' => array('giftcard_order_form'),
    'access arguments' => array('access content'),
    'type' =>  MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );

$items['myaccount/addfunds/payment/receipt'] = array( 
    'title' => t(''), 
    'description' => '', 
     'page callback' => 'giftcard_page_add_funds_payment_receipt',
    // 'page arguments' => array('giftcard_order_form'),
    'access arguments' => array('access content'),
    'type' =>  MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );

$items['myaccount/fundssend'] = array( 
    'title' => t(''), 
    'description' => '', 
     'page callback' => 'giftcard_authorizenet_senddata',
    // 'page arguments' => array('giftcard_order_form'),
    'access arguments' => array('access content'),
    'type' =>  MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );
$items['myaccount/fundsreceipt'] = array( 
    'title' => t(''), 
    'description' => '', 
     'page callback' => 'giftcard_authorizenet_receipt',
    // 'page arguments' => array('giftcard_order_form'),
    'access arguments' => array('access content'),
    'type' =>  MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );


$items['applicabletaxes'] = array( 
    'title' => t(''), 
    'description' => '', 
     'page callback' => 'giftcard_page_applicabletaxes',
    // 'page arguments' => array('giftcard_order_form'),
    'access arguments' => array('access content'),
    'type' =>  MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );


$items['myaccount/e-giftcard'] = array( 
    'title' => t('Send e-Gift Card'), 
    'description' => '', 
  //  'page callback' => 'giftcard_page_send_egiftcard',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('giftcard_page_send_egiftcard_form'),
    'access arguments' => array('access content'),
    'type' =>  MENU_CALLBACK,
    // 'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  return $items; 
}
 
function giftcard_add_form($form_state){

 $form['code'] = array(
    '#type' => 'textfield',
    '#title' => t('Code start with:'),
    '#required' => TRUE,
    '#size'=>5
  ); 
 $form['giftcardvalue'] = array(
    '#type' => 'textfield',
    '#title' => t('Gift Card value:'),
    '#required' => TRUE,
    '#default_value'=>0,
    '#size'=>10

  ); 
 $form['generatecant'] = array(
    '#type' => 'textfield',
    '#title' => t('Numbers of Gift Card:'),
    '#required' => TRUE,
    '#default_value'=>1,
    '#size'=>10

  );


    $dateformat = 'Y-m-d';
    $timestamp = time(); // <- as example, usually this is a db value
    $label = t('Custom date');
    $dbv = $timestamp;
    $value = NULL;
    // construct date, if db value is empty, default to now
    if (empty($dbv)) {
      $d = new DateTime('@'.$dbv);
      $value = $d->format($dateformat);
    } else {
      $d = new DateTime();
      $value = $d->format($dateformat);
    }
    $form['startdate'] = array(
      '#type' => 'date_popup',
      // '#date_timezone' => date_default_timezone(),
      '#date_format' => $dateformat,
      '#date_year_range' => '-3:+3',
      '#title' => "Start Date:",
      '#default_value' => $value,
      '#required' => TRUE,
    );



  $form['enddate'] = array(
    '#type' => 'date_popup',
    '#title' => t('End date:'),
    '#date_format' => $dateformat,
    '#date_year_range' => '-3:+3',
    // '#required' => TRUE,
  );

 $form['servicefee'] = array(
    '#type' => 'textfield',
    '#title' => t('Service fee:'),
    '#required' => TRUE,
    '#default_value'=>0,
    '#size'=>10

  );



  // Adds a simple submit button that refreshes the form and clears its contents -- this is the default behavior for forms.
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );
  return $form;

}

function giftcard_form_validate($form, &$form_state) {
  // $year_of_birth = $form_state['values']['year_of_birth'];
  // if ($year_of_birth && ($year_of_birth < 1900 || $year_of_birth > 2000)) {
  //   form_set_error('year_of_birth', 'Enter a year between 1900 and 2000.');
  // }
}

function giftcard_add_form_submit($form, &$form_state) {
   
//creacion de giftcards
$cantidad = $form_state['values']['generatecant'];

	for($i=1;$i<=$cantidad;$i++){		
		giftcard_create($form_state['values'], $form_state['values']['code'] , $i );
	}
 
}



function giftcard_create($values, $prefix , $position='0001' ){

global $user;
//ESTADO
$stardate=$values['startdate'];
//si la fecha de inicio es posterior se genera como inactivo
if($stardate == date("Y-m-d")){
  $status = 1;
}else{
  $status = 0;
}

// $code = strtoupper($prefix)."-" .rand(100000,999999) . "-"  . str_pad($position, 4, "0", STR_PAD_LEFT);
$code = strtoupper($prefix)."-" .rand(100000,999999);
$nid = db_insert('giftcard') // Table name no longer needs {}
          ->fields(array(
            'code' => $code,
            'original_value' => $values['giftcardvalue'],
            'balance_value' => $values['giftcardvalue'],
            // 'client' => NULL,
            'start_date' => $values['startdate'],
            'end_date' => $values['enddate'],
            'service_fee' => $values['servicefee'],
            'status' => $status,
            'created' => date('Y-m-d H:i:s'),
            'user' => $user->uid,
          ))
          ->execute();

            drupal_set_message(t("Gift cards generated ".$code."-".$nid), 'status', FALSE);

}




/**
 * Utility Function for building links for the table
 */
 function _giftcard_generate_options($id){
    $links = l(t('View'), "admin/giftcard/view/$id").  '&nbsp;&nbsp;'.
              l(t('Edit'), "admin/giftcard/edit/$id").  '&nbsp;&nbsp;'
            // l(t('Remove'), "admin/giftcard/remove/$id").  '&nbsp;&nbsp;'
            ;
    return $links;
 }


 function _giftcard_orders_generate_options($id){
    $links = // l(t('View'), "admin/giftcard/orders/view/$id").  '&nbsp;&nbsp;'.
             l(t('Update'), "admin/giftcard/orders/edit/$id").  '&nbsp;&nbsp;'.
            l(t('Cancel'),"admin/giftcard/orders/cancel/$id").  '&nbsp;&nbsp;'
            ;
    return $links;
 }

 function _giftcard_transaction_generate_options($id){
    $links = 
            // l(t('View'), "admin/giftcard/transaction/view/$id").  '&nbsp;&nbsp;'.
             l(t('Edit'), "admin/giftcard/transaction/edit/$id").  '&nbsp;&nbsp;'
            // .l(t('Cancel'),"admin/giftcard/transaction/cancel/$id").  '&nbsp;&nbsp;'
            ;
    return $links;
 }




/*
* Listado de giftcard en la administracion
*/
function giftcard_list_form($node, &$form_state){
$header = array(
             array('data' => t('ID'), 'field' => 'id', 'sort' => 'desc'), // sort
             array('data' => t('Code'), 'field' => 'code'),
             array('data' => t('Original value'), 'field' => 'original_value'),
             array('data' => t('Balance value'), 'field' => 'balance_value'),
             array('data' => t('Balance value real')),
             array('data' => t('Client'), 'field' => 'client'),
             array('data' => t('Start Date'), 'field' => 'start_date'),
             array('data' => t('Service Fee Start Date'), 'field' => 'end_date'),
             array('data' => t('Service Fee'), 'field' => 'service_fee'),
             array('data' => t('Status'), 'field' => 'status'),
             array('data' => t('Created'), 'field' => 'created', 'sort' => 'asc'),
             array('data' => t('Create by')),
             array('data' => t('Publish')),
             array('data' => t('Actions'), ),
           );





$form = array();
 

 $form['linksactions'] = array(
  '#markup' => 
  "<a href='/admin/giftcard/add'> + Create Gift Cards by range</a> "
 
  );


$form['filter'] = array(
  '#type' => 'fieldset',
  '#collapsible' => TRUE,
  '#collapsed' => FALSE,
  '#title' => t('Filter option')
);
$form['filter']['code'] = array(
  '#type' => 'textfield',
  '#title' => t('Code'),
  '#size' => 15,
  '#default_value'=>(!empty($_SESSION["giftcard"]["CODE"]))?$_SESSION["giftcard"]["CODE"]:"",
);



    $dateformat = 'Y-m-d';
    
    $form['filter']['startdate'] = array(
      '#type' => 'date_popup',
      // '#date_timezone' => date_default_timezone(),
      '#date_format' => $dateformat,
      '#date_year_range' => '-3:+3',
      '#title' => "Start Date:",
    
    );



  $form['filter']['rangeini'] = array(
    '#type' => 'textfield',
    '#title' => t('Range Initial:'),
    '#size' =>5,
    '#default_value'=>(!empty($_SESSION["giftcard"]["rangeini"]))?$_SESSION["giftcard"]["rangeini"]:"",
  );

 $form['filter']['rangefin'] = array(
    '#type' => 'textfield',
    '#title' => t('Range Final:'),
    '#size' => 5,
    '#default_value'=>(!empty($_SESSION["giftcard"]["rangefin"]))?$_SESSION["giftcard"]["rangefin"]:"",
  );


$form['filter']['status'] = array(
  '#type' => 'select',
  '#title' => t('Status'),
  '#options' => array(
          "all" => t('all'),
          0 => t('Inactive'),
          1 => t('Active'),
          2 => t('Expired'),
       ),
   '#default_value'=>(!empty($_SESSION["giftcard"]["status"]))?$_SESSION["giftcard"]["status"]:"",
);

$limit = (!empty($_SESSION["giftcard"]["pager"]))?$_SESSION["giftcard"]["pager"]:"100";
$form['filter']['pager'] = array(
  '#type' => 'select',
  '#title' => t('Item by page: '),
  '#options' => array(
          "all" => t('all'),
          10 => 10,
          50 => 50,
          100=> 100,
          500=> 500,
       ),
   '#default_value'=>$limit,
);

$form['filter']['submit'] = array(
  '#type' => 'submit',
  '#value' => t('Filter'),
);

$form['filter']['reset'] = array(
  '#type' => 'submit',
  '#value' => t('Reset'),
);

$form['filter']['export'] = array(
  '#type' => 'submit',
  '#value' => t('Export'),
);

$form['filter']['active'] = array(
  '#type' => 'submit',
  '#value' => t('Activate Cards'),
);


$form['filter']['addfunds'] = array(
  '#type' => 'submit',
  '#value' => t('Assign Values'),
);

$form['filter']['update_startdate'] = array(
  '#type' => 'submit',
  "#weight"=>100,
  '#value' => t('Update Start Date'),
);



//query
$query = db_select('giftcard', 'g');

    $query->fields('g', array('id', 'code', 'original_value','balance_value','client','start_date','end_date','service_fee','status',"created","state"));
    $query->addField("u" , "name");
    $query->addField("u2" , "name",'creatername');
    $query->addField("u2" , "uid",'createrid');
    // $query->addExpression("CONCAT(g.code, '-', g.id)", 'codefull');
    $query->leftjoin("users" , "u" , "u.uid = g.client");
    $query->leftjoin("users" , "u2" , "u2.uid = g.user");
    $table_sort = $query->extend('TableSort') // Add table sort extender.
                        ->orderByHeader($header); // Add order by headers.
    if(!is_numeric($limit)){
      $rs = db_query('SELECT count(*) as cantidad FROM giftcard');
      $cant = $rs->fetchObject();
      $limit = $cant->cantidad;
      // drupal_set_message(t($limit), 'status', FALSE);
    }

      $pager = $table_sort->extend('PagerDefault')
                          ->limit($limit); // 5 rows per page.
  
    // dsm($form_state);
    if (!empty($_SESSION["giftcard"]["CODE"])) {
      // $or = db_or();
      // $or->condition('g.code', '%' . db_like($_SESSION["giftcard"]["CODE"]) . '%', 'LIKE');
      // $or->condition('g.id', '%' . db_like($_SESSION["giftcard"]["CODE"]) . '%', 'LIKE');
      // $query->condition($or);
      // $query->condition('codefull', '%' . db_like($_SESSION["giftcard"]["CODE"]) . '%', 'LIKE');
      $query->where("CONCAT(g.code, '-', g.id) LIKE :q", array(':q'=>'%' . db_like($_SESSION["giftcard"]["CODE"]) . '%'));
    }    

     if (!empty($_SESSION["giftcard"]["rangeini"])) {
      $query->condition('g.id', $_SESSION["giftcard"]["rangeini"], '>=');
    }   

    if (!empty($_SESSION["giftcard"]["rangefin"])) {
      $query->condition('g.id', $_SESSION["giftcard"]["rangefin"], '<=');
    }   

    if (isset($_SESSION["giftcard"]["status"]) and $_SESSION["giftcard"]["status"] != 'all') {
      $query->condition('g.status', $_SESSION["giftcard"]["status"], '=');
      // drupal_set_message(t("se eejcutor"), 'status', FALSE);
    }  


     if (!empty($_SESSION["giftcard"]["startdate"])) {
      // dsm("hola");
      $query->condition('g.start_date',  ($_SESSION["giftcard"]["startdate"]) , '=');
    }
          


    $result = $pager->execute();

    $rows = array();
    foreach($result as $res){

      switch ($res->status) {
        case '0':
          $status_label = "Inactive";
          break;case '1':
          $status_label = "Active";
          break;case '2':
          $status_label = "Expired";
          break;
        
       
      }
       switch ($res->state) {
        case '0':
          $state_label = "No";
          break;case '1':
          $state_label = "Yes";
          break;case '2':
          $state_label = "Expired";
          break;
        
       
      }

// global $user;

      $rows[$res->id] = array($res->id, 
                              $res->code .'-'.$res->id, 
                            "$ ".$res->original_value,
                            "$ ".giftcard_balance_value_enable($res->id),
                            "$ ".$res->balance_value ,
                            $res->name,
                            $res->start_date,
                            _giftcard_service_fee_start_date($res->id),
                            "$ ".$res->service_fee,
                            $status_label , 
                            $res->created , 
                            "<a href='/user/".$res->createrid."'>".$res->creatername."</a>" , 
                            $state_label , 
                            _giftcard_generate_options($res->id));

    }


$form['table'] = array(
  '#type' => 'tableselect',
  '#header' => $header,
  '#options' => $rows,
  '#empty' => t('Table has no row!')
);

$form['pager'] = array('#markup' => theme('pager'));

return $form;
}



function giftcard_list_form_submit($form, &$form_state) {
  // dsm($form_state);

   $_SESSION["giftcard"]["CODE"]      = strtoupper($form_state['values']['code']);
   $_SESSION["giftcard"]["startdate"] = $form_state['values']['startdate'];
   $_SESSION["giftcard"]["rangeini"]  = $form_state['values']['rangeini'];
   $_SESSION["giftcard"]["rangefin"]  = $form_state['values']['rangefin'];
   $_SESSION["giftcard"]["status"]    = $form_state['values']['status'];
   $_SESSION["giftcard"]["pager"]     = $form_state['values']['pager'];


  if($form_state['clicked_button']["#value"] == "Filter"){
   //GENERA LAS SESIONES
  }elseif($form_state['clicked_button']["#value"] == "Reset"){
    $form_state['values'] = array();
    unset($_SESSION["giftcard"]);
    drupal_goto("admin/giftcard");

  }elseif($form_state['clicked_button']["#value"] == "Export"){


$table = $form_state['values']["table"];
$trs='';
foreach ($table as $row => $value) {
  # code...
  $rs = db_query("SELECT CONCAT_WS('-',code,id ) AS codefull FROM giftcard where id =".$value);
  $result = $rs->fetchObject();
  if(!empty($result))
    $trs .="<tr><td>". $result->codefull."</td></tr>";
}
if(empty($trs)){
drupal_set_message(t("Please , select Gift Cards to export"), 'warning', FALSE);
}else{
    header("Content-Type: application/vnd.ms-excel; charset=utf-8");
    header('Content-Disposition: attachment; filename="giftCard-'. date("Y-m-d_H-i-s") .'.xls"');
$html = <<<EOD

<table align="center" border="1" cellpadding="1" cellspacing="0" >

    <tr bgcolor="" align="center">
        <td colspan="2">Gift Card Number</td>      
    </tr>
    {$trs}
</table>
EOD;


print $html;
exit; 

  }

  
  }elseif($form_state['clicked_button']["#value"] == "Activate Cards"){
    $table = $form_state['values']["table"];
    $count =0;
    $cards = array();
    foreach ($table as $row => $value){
      if(!empty($value)){
        $count++;
        // Activar Giftcard
         $rs = db_query("UPDATE giftcard SET status = 1  where id =".$value);
         $cards[] = $value;
      }
    }

    if(empty($count)){
      drupal_set_message(t("Please , select Gift Cards to activate"), 'warning', FALSE);
    }else{
      $text = implode(' , ', $cards);
      drupal_set_message(t("$count Gift Cards have been activated : $text"), 'status', FALSE);

    }
  }
  elseif($form_state['clicked_button']["#value"] == "Assign Values"){

   $_SESSION["giftcard"]["table"] = $form_state['values']['table'];
   drupal_set_message(t("Assign Values"), 'status', FALSE);
   drupal_goto("admin/giftcard/list/addfunds");
   //funcion giftcard_admin_addfunds_form

  }
   elseif($form_state['clicked_button']["#value"] == "Update Start Date"){

   $_SESSION["giftcard"]["table"] = $form_state['values']['table'];
   drupal_set_message(t("Assign Values"), 'status', FALSE);
   drupal_goto("admin/giftcard/list/updatestartdate");
   //funcion giftcard_admin_addfunds_form

  }
   
   $form_state['rebuild'] = TRUE;

}

function giftcard_export_excel(){

}


function giftcard_login(){


   $page = ""
   . '<div class="formuser userregister"> '
   . "<h2>Create a Personal account</h2>"
   . "<span class=\"description\">Enter your info  and start using your Gift Card</span>"
   . render( drupal_get_form('user_register_form'))
   . '</div>'
   . '<div class="formuser userlogin"> '
   . "<h2>Login in your account</h2>"
   . "<span class=\"description\">If you alreadty have an account, please login here.</span>"
   . render( drupal_get_form('user_login'))
   . '</div>'
   ;

  return $page;
}


function giftcard_order_form($node, &$form_state){

//validacion de inicio de session
  global $user;

  if(!$user->uid)
    drupal_goto("login",array('query'=>drupal_get_destination()));

//MOSTRAR OFERTA SELECCIONADA
$nid = arg(2);

if(!empty($nid))
	$_SESSION['giftcardoffer'] = $nid;
else
	$nid = $_SESSION['giftcardoffer'];

$args = array($nid);
$view = views_get_view('selected_deal');
$offer =  $view->preview('default', $args);


$form['offer'] = array(  '#markup' => $offer,    '#prefix' => '<div class="orderoffer">',  '#suffix' => '</div>',  );

$form['nid'] = array(    '#type' => 'hidden',    '#value' => $nid,  ); 
 
 $opciones = giftcard_mygiftcard_options($user->uid);
 $opciones['combine'] = 'Combine 2 or more Gift Cards';

$form['codefull'] = array(
          '#type' => 'select',
          '#title' => t('Select your giftcard:'),
          '#options' => $opciones,
          '#attributes' => array('class'=>array('part1')),
          '#ajax'=>array(
            'callback'=> 'giftcard_ajax_validate',
            'change'=>TRUE,
            'effect' => 'fade',
            ),
        );

$form['giftcard'] = array(
    '#type' => 'textfield',
    '#title' => t('Gift Card number:'),
    '#suffix' => "<div id=\"giftcardmessage\"></div>",
    '#attributes' => array('placeholder'=>array('..-.......-....')),
    '#ajax'=>array(
    	'callback'=> 'giftcard_ajax_validate',
    	'keypress'=>TRUE,
    	'effect' => 'fade',
    	),
  ); 

$form['combine'] = array(
    '#type' => 'textarea',
    '#title' => t('Gift Cards:'),
    '#description'=>"",
    
  );

 $form['userdata'] = array(
  '#type' => 'fieldset',
  '#collapsible' => FALSE,
  '#collapsed' => FALSE,
   '#title' => t('User Information')
);
     $form['userdata']['name'] = array(
        '#type' => 'textfield',
        '#title' => t('Name:'),
        '#required' => TRUE,
        '#attributes' => array('id'=>array('text_name')),
        '#default_value'=>""
      );

    $form['userdata']['lastname'] = array(
        '#type' => 'textfield',
        '#title' => t('Last Name:'),
        '#required' => TRUE,
        '#default_value'=>""
      );
      $form['userdata']['mail'] = array(
        '#type' => 'textfield',
        '#title' => t('E-Mail:'),
        '#required' => TRUE,
        '#default_value'=>""
      );
      $form['userdata']['telephone'] = array(
        '#type' => 'textfield',
        '#title' => t('Telephone Number:'),
        '#required' => TRUE,
        '#default_value'=>""
      ); 

  $form['shipping'] = array(
  '#type' => 'fieldset',
  '#collapsible' => FALSE,
  '#collapsed' => FALSE,
   '#title' => t('Shipping Data')
);

      $form['shipping']['address'] = array(
          '#type' => 'textfield',
          '#title' => t('Address:'),
          '#required' => TRUE,
          '#default_value'=>""
        );
      $form['shipping']['suite'] = array(
          '#type' => 'textfield',
          '#title' => t('Suite/Apt.:'),
          // '#required' => TRUE,
          '#default_value'=>""
        );
      $form['shipping']['city'] = array(
          '#type' => 'textfield',
          '#title' => t('City:'),
          '#required' => TRUE,
         '#default_value'=>""
        );
      $form['shipping']['postalcode'] = array(
          '#type' => 'textfield',
          '#title' => t('Postal Code:'),
          '#required' => TRUE,
          '#default_value'=>""
        );


$form['orderdetail'] = array(
    '#type' => 'textarea',
    '#title' => t('Order Details:'),
    '#description'=>"Please include all particulars such as style, location, quantity, size, color and any other particulars. We will be unable to process your request if all the specific information is not included.",
    '#required' => TRUE,
    '#default_value'=>"Colour: ( )
Size: ( )
Quantity( )"
  );
 $form['agree'] = array(
    '#type' => 'checkbox',
    // '#required' => TRUE,
    
    '#title' => 'I understand that the value of the deal selected does not include any applicable shipping fees and taxes. I confirm that I have read the restrictions of this deal and its total value does not exceed the value of my Gift Card. I also acknowledge that I have read and agree to the Terms and Conditions related to this Gift Card.',
  );

$form['alert'] = array(
  '#markup' => "<div id=\"orderalert\"></div>",
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Buy with Gift Cards',
  );

  return $form;
}



function giftcard_order_form_validate($form, &$form_state) {
  // $year_of_birth = $form_state['values']['year_of_birth'];
  // if ($year_of_birth && ($year_of_birth < 1900 || $year_of_birth > 2000)) {
  //   form_set_error('year_of_birth', 'Enter a year between 1900 and 2000.');
  // }

global $user;

	//VALIDAR GIFT CARD
  $codefull = $form_state['values']['codefull'];
  
//VALIDAR QUE NO VALIDE NADA CUANDO SEA COMBINE
  if($codefull == 'combine'){
    $field_combine = $form_state['values']['combine'];
    if(empty($field_combine))
      form_set_error('combine', 'The Combine field can not be empty');


  }else{
    // PROCESO DE VALIDACION NORMAL
  if($codefull == "new")
     $codefull = $form_state['values']['giftcard'];
  $nid = $form_state['values']['nid'];
  $validate = giftcard_validate_codefull( $codefull , $user->uid , $nid );

  if(!$validate["validate"])
    form_set_error('giftcard', $validate["message"]);

  }

  



//VALIDA CHECK DE ACEPTO TERMINOS Y CONDICIONES
if(!$form_state['values']['agree']){
  form_set_error('agree', 'Please read and agree to the disclosure below by checking the box.');
}


}


function giftcard_order_form_submit($form, &$form_state) {
  // dsm($form_state);
global $user;
$values  = $form_state["values"];
$codefull = $values["codefull"];

//SI ES UNA COMPRA CON TARJETA COMBINADA
if($codefull == 'combine'){
    $node  = node_load($values['nid']);
    // REGISTRAR PEDIDO Y MOSTRARLO EN LA LISTA
    giftcard_register_order_combine($values);

global $base_url;
$body = <<<EOD
<div>
<div class="data"><span style="font-weight:bold">Gift Card Number: </span>{$values['combine']}<br></div>
<div class="data"><span style="font-weight:bold">Name : </span>{$values['name']}<br></div>
<div class="data"><span style="font-weight:bold">Last Name : </span>{$values['lastname']}<br></div>
<div class="data"><span style="font-weight:bold">Email Address : </span>{$values['mail']}<br></div>
<div class="data"><span style="font-weight:bold">Telephone Number : </span>{$values['telephone']}<br></div>
<div class="data"><span style="font-weight:bold">Shipping Address : </span>{$values['address']}<br></div>
<div class="data"><span style="font-weight:bold">Suite/Apt. : </span>{$values['suite']}<br></div>
<div class="data"><span style="font-weight:bold">city : </span>{$values['city']}<br></div>
<div class="data"><span style="font-weight:bold">Postal code : </span>{$values['postalcode']}<br></div>
<div class="data"><span style="font-weight:bold">Order details : </span>{$values['orderdetail']}<br></div>
<div class="data"><span style="font-weight:bold">Product Name : </span>{$node->title}<br></div>
<div class="data"><span style="font-weight:bold">Product Url : </span><a href="{$base_url}/node/{$node->nid}">{$base_url}/node/{$node->nid}</a></div>
</div>
<br> <br>  
Best Regards,<br> <br>  
Client Services <br>  
<a href="http://www.dealcountry.com">www.dealcountry.com</a><br>
<img src="http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/logosmall.png" alt="" width="140"><br>  
Come Tour all the great deals! 
EOD;

    $params = array(    'subject' => 'DealCountry purchase completed notification',
    'body' => $body,   'gifcard'=>$values["giftcard"],    );
    giftcard_send_mail($params);


    giftcard_email_notifiacion_orden_comprador($values['mail'],$values["giftcard"]);

    //ENVIAR MENSAJE
    drupal_set_message(t("Your Order has been accepted , Your new Gift Cards balances will be available under <a href='/myaccount/purchase'>My Account</a> section after your order has been completed"), 'status', FALSE);

  }//SI ES UNA COMPRA NORMAL
  else{

if($codefull == "new")
  $codefull = $values["giftcard"];

$rs = db_query("select * from giftcard g 
  where g.state = 1 and g.status = 1 
  AND CONCAT(code,'-',id) = '".$codefull."'");

$giftcard = $rs->fetchObject(); 
// VALIDAR PEDIDO

// AGREGAR GIFT CARD AL USUARIO
  $add = giftcard_register_to_user( $codefull , $user->uid );
// DISMINUIR GIFTCARD
  $charge = giftcard_discrease_balance_value( $codefull , $values["nid"] );
// REGISTRAR PEDIDO Y MOSTRARLO EN LA LISTA
  $idorder = giftcard_register_order($values);
// REGISTRAR DETALLE A DE USO DE GIFTCARD
  giftcard_register_detail( $giftcard->id , $type = 1 , $description = 'Register Order' , $charge , $idorder  = $idorder );

  drupal_set_message(t("Your Order has been accepted , Please visit your <a href='/myaccount/purchase'>Account</a> to view your purchases"), 'status', FALSE);

  }
  drupal_goto("node/".$values["nid"]);

}

function giftcard_validate_codefull( $codefull , $uid , $nid ){
  $codefull  = trim($codefull);
		$rs = db_query("select *  from giftcard g 
     where g.state = 1 and g.status = 1 and  CONCAT(code,'-',id) = '".$codefull."'");
		// g.start_date <= NOW() and // se quito esta opcion por si se activa a destiempo un giftcard
		$giftcard = $rs->fetchObject();  
		$alert = "";
		
		
		if(!$giftcard){
			return array("validate"=>FALSE , "message"=>"Sorry, the Gift Card doesn't exists or is invalid", "alert"=>$alert );
		}

		$alert = "";	

		if ($giftcard->client != $uid and !is_null($giftcard->client)) {
			return array("validate"=>FALSE , "message"=>"This Gift Card has other owner , please contact with the administrator", "alert"=>$alert );
		
		}

    if($nid){

      $node = node_load($nid);
    // $price = field_get_items('node', $node, 'field_deal_price_value');
    $price = $node->field_deal_price_value['und'][0]['value'];
    $balance_value = $giftcard->balance_value;
    

		if ($price > $balance_value) {
			return array("validate"=>FALSE , "message"=>"The value of the deal selected exceeds the value of your Gift Card. Please <a href='/myaccount/addfunds?pendent_order=$nid'>click here to add funds</a> to your Gift Card.  Your Gift Card balance is $ ".$balance_value, "alert"=>$alert );
      
		}else{
			
			//SI EL SOBRANTE ES MUY POQUITO
			if($balance_value  - $price < 10 ){
			$alert = "
			<div id='alert'>
			<img src='/sites/all/themes/bootstrap_dealcountry/images/alert.png'>
			<div class='altitle'>ALERT</div>
			<div class='albody'>Your balance is close to product price, please read the shipping and taxes details and add funds to your Gift Cards if necesary.</div>
			</div>
			";

			}
    }
			$message = "Your Gift Card balance is $ ".$balance_value .".";
			return array("validate"=>TRUE , "message"=> $message, "alert"=>$alert);
		}

}




function giftcard_ajax_validate($form, $form_state) {



	global $user;

  $uid = $user->uid;
	$nid = $form_state['values']['nid'];
  $codefull = $form_state['values']['codefull'];

  if($codefull == "new"){
    $codefull = $form_state['values']['giftcard'];
  }

	$respuesta = giftcard_validate_codefull( trim($codefull) , $uid , $nid );
	$resp = $respuesta["message"];
  $validate= $respuesta["validate"];

  if(!$validate){
    $class="alert alert-block alert-danger";
  }else{
    $class="alert alert-block alert-success";
    $link = "<a class='applicabletaxes colorbox-load' href='/applicabletaxes/$nid?width=850'>Click here for shipping fees and Taxes (if applicable)</a>";
  }

  if(empty($codefull)){
    $resp = "Please, write your Gift Card";
    $class="alert alert-block alert-success";

  }

  //VALIDANDO COMBINE
  if($codefull == "combine"){
    $resp = "Please add one Gift Card per line. Your new Gift Cards balances will be available under My Account section after your order has been completed";
    $class="alert alert-block alert-success";
  }



   $resp  = "<div class=\"$class\">". $resp ."</div>".$link;
   $commands = array();
   // Replace the content of '#object-1' on the page with 'some html here'.
   $commands[] = ajax_command_replace('#giftcardmessage', "<div id=\"giftcardmessage\">".$resp."</div>");
   $commands[] = ajax_command_replace('#orderalert',"<div id=\"orderalert\">" . $respuesta["alert"] . "</div>");
 
  return array('#type' => 'ajax', '#commands' => $commands);


}

function giftcard_register_order_combine($values){
// DATOS OFERTA
  $node  = node_load($values['nid']);
  $price = $node->field_deal_price_value['und'][0]['value'];

  $args = array($values['nid']);
  $view = views_get_view('selected_deal');
  $offer =  $view->preview('default', $args);


  global $user;

  //registramos el giftcard al usuario
  $nid = db_insert('orders') // Table name no longer needs {}
          ->fields(array(
            'idoffer' => $node->nid,
            'title' => $node->title,
            'html' =>$offer,
            // 'title' => $node->title,
            'idgiftcard' => 0,
            'client' => $user->uid,
            'charge' => $price,
            'shipping' => 0,
            'taxes' => 0,
            'comment' => " Purchase with Combine : <br>" . $values['combine'],
            'final_charge' => $price,
            'status' => 1,
            'sh_name' => $values['name'], 
            'sh_last_name' => $values['lastname'], 
            'sh_email' => $values['mail'], 
            'sh_telephone' => $values['telephone'], 
            'sh_address' => $values['address'], 
            'sh_suite' => $values['suite'], 
            'sh_city' => $values['city'], 
            'sh_postalcode' => $values['postalcode'], 
            'order_details' => $values['orderdetail'], 
            'created' => date('Y-m-d H:i:s'),
            'user' => $user->uid,
            'state' => 1,
          ))
          ->execute();

}


/*
Registro de orden de compra normla
*/
function giftcard_register_order($values){

	//volvemos a validar 

	// DATOS DE GIFTCARD
  $codefull = $values['codefull'];
  if($codefull == "new"){
    $codefull = $values['giftcard'];
  }

    $sql = "select *  from giftcard g 
     where g.state = 1 and g.status = 1  and CONCAT(code,'-',id) = '".$codefull."'";
    $rs = db_query($sql);


	$giftcard = $rs->fetchObject();  
  if(empty($giftcard)){
    drupal_set_message(t("We have a problem with your Gift Card number, $codefull"), 'status', FALSE);
    drupal_goto("node/".$values['nid']);
    return "";
  }

	// DATOS OFERTA
	$node  = node_load($values['nid']);
	$price = $node->field_deal_price_value['und'][0]['value'];

  $args = array($values['nid']);
  $view = views_get_view('selected_deal');
  $offer =  $view->preview('default', $args);



	global $user;

	//registramos el giftcard al usuario
	$nid = db_insert('orders') // Table name no longer needs {}
          ->fields(array(
            'idoffer' => $node->nid,
            'title' => $node->title,
            'html' =>$offer,
            // 'title' => $node->title,
            'idgiftcard' => $giftcard->id,
            'client' => $user->uid,
            'charge' => $price,
            'shipping' => 0,
            'taxes' => 0,
            'comment' => "",
            'final_charge' => $price,
            'status' => 1,
            'sh_name' => $values['name'], 
            'sh_last_name' => $values['lastname'], 
            'sh_email' => $values['mail'], 
            'sh_telephone' => $values['telephone'], 
            'sh_address' => $values['address'], 
            'sh_suite' => $values['suite'], 
            'sh_city' => $values['city'], 
            'sh_postalcode' => $values['postalcode'], 
            'order_details' => $values['orderdetail'], 
            'created' => date('Y-m-d H:i:s'),
            'user' => $user->uid,
            'state' => 1,
          ))
          ->execute();
          // dsm($nid);

//ENVIO DE EMAILS
global $base_url;
$body = <<<EOD
<div>
<div class="data"><span style="font-weight:bold">Gift Card Number: </span>{$codefull}<br></div>
<div class="data"><span style="font-weight:bold">Name : </span>{$values['name']}<br></div>
<div class="data"><span style="font-weight:bold">Last Name : </span>{$values['lastname']}<br></div>
<div class="data"><span style="font-weight:bold">Email Address : </span>{$values['mail']}<br></div>
<div class="data"><span style="font-weight:bold">Telephone Number : </span>{$values['telephone']}<br></div>
<div class="data"><span style="font-weight:bold">Shipping Address : </span>{$values['address']}<br></div>
<div class="data"><span style="font-weight:bold">Suite/Apt. : </span>{$values['suite']}<br></div>
<div class="data"><span style="font-weight:bold">city : </span>{$values['city']}<br></div>
<div class="data"><span style="font-weight:bold">Postal code : </span>{$values['postalcode']}<br></div>
<div class="data"><span style="font-weight:bold">Order details : </span>{$values['orderdetail']}<br></div>
<div class="data"><span style="font-weight:bold">Product Name : </span>{$node->title}<br></div>
<div class="data"><span style="font-weight:bold">Product Url : </span><a href="{$base_url}/node/{$node->nid}">{$base_url}/node/{$node->nid}</a></div>
</div>
<br> <br>  
Best Regards,<br> <br>  
Client Services <br>  
<a href="http://www.dealcountry.com">www.dealcountry.com</a><br>
<img src="http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/logosmall.png" alt="" width="140"><br>  
Come Tour all the great deals! 
EOD;

    $params = array(
    // 'subject' => 'DealCountry : Buy with Giftcard '.$values["giftcard"],
    'subject' => 'DealCountry purchase completed notification',
    'body' => $body,
    'gifcard'=>$values["giftcard"],
    );
  giftcard_send_mail($params);


  giftcard_email_notifiacion_orden_comprador($values['mail'],$values["giftcard"]);



       return $nid;

}

function giftcard_email_notifiacion_orden_comprador($to = '', $giftcard = ''){
//NOTIFICACION DE ORDEN
$body = <<<EOD

Thank you for using your dealcountry.com Gift Card! Your request will be processed within 2 business days.
<br>  <br>  
Best Regards,<br> <br>  
Client Services <br>  
<a href="http://www.dealcountry.com">www.dealcountry.com</a><br>
<img src="http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/logosmall.png" alt=""><br>    
Come Tour all the great deals! 
 
EOD;

  $params = array(
    'subject' => 'Thank you for using your dealcountry.com Gift Card',
    'body' => $body,
    'gifcard'=>$giftcard,
    );

  // $to = $values['mail'];
  $from = '"Dealcountry.com" <support@dealcountry.com>';
  
    drupal_mail('giftcard', 'orders', $to, language_default(), $params, $from, TRUE);

}

/*
 * $code is giftcardcode + id
 */
function giftcard_register_to_user( $code , $uid ){

	// VALIDAR QUE EXISTA
	 // $rs = db_query("select * from giftcard g where g.state = 1 and g.status = 1 and g.end_date >= NOW() AND g.code = '".$code."'");
		  $rs = db_query("select *  from giftcard g 
     where g.state = 1 and g.status = 1 and CONCAT(code,'-',id) = '".$code."'");
		$giftcard = $rs->fetchObject();  
		
		
		
		if(!$giftcard){
			return array("response"=>FALSE , "message"=>"Gift Card does not exist." );
		}

	// VALIDAR QUE NO PERTENESCA A OTRO USUARIO

		if ( !is_null($giftcard->client) ) {

			if($giftcard->client != $uid )
				return array("response"=>FALSE , "message"=>"This Gift Card has other owner already . Please contat with the administrator" );
			else
				return array("response"=>TRUE , 'message'=>"Gift Card is registered already.");
			
		}


		// ACTUALIZAR GIFTCARD
		db_query("update giftcard set client = $uid  where id =".$giftcard->id);
		return array("response"=>TRUE , "message"=>"Gift Card has been registered.");

}


/*
Disminuye el balance de un giftcard
si envio el nid , se desminuira en funcion del costo de esa oferta
si solo envio el codigo  y el charge , se disminuira 
*/
function giftcard_discrease_balance_value( $codefull = 0 , $nid = 0  , $charge = 0 ,$giftid  = 0){
      
    if(!empty($codefull)){
      
        $rs = db_query("select *  from giftcard g 
         where g.state = 1 and g.status = 1  and CONCAT(code,'-',id) = '".$codefull."'");
      	$giftcard = $rs->fetchObject(); 

    }elseif(!empty($giftid)){
        $rs = db_query("select *  from giftcard g 
         where g.state = 1 and g.status = 1 and id = $giftid");
        $giftcard = $rs->fetchObject(); 
    }
    if(empty($giftcard)){
      $data  =func_get_args();
      drupal_set_message("We have had a problem with the Gift Card." . json_encode($data));
      return false;
    }

   // PROBLEMAS CON DESINCREMENTO 
  if(!empty($nid)){
  	   //OBTENER MONTO DE LA OFERTA
  	   $node = node_load($nid);
  		// $price = field_get_items('node', $node, 'field_deal_price_value');
  		$price = $node->field_deal_price_value['und'][0]['value'];
  		$balance_value = $giftcard->balance_value;
      
  }else{
    //monto a disminuir
    $price  = $charge;
  }


	db_query("update giftcard set balance_value = balance_value - $price where id =".$giftcard->id);

	return $price;

}


function giftcard_order_list(){}


function giftcard_order_edit(){}


function giftcard_order_remove(){}



function giftcard_register_detail($idgiftcard , $type , $description = '' , $charge , $idorder  = 0 , $idtransaction = 0  ){

		global $user;
// dsm($idgiftcard);
	//registramosel giftcard al usuario
	$nid = db_insert('giftcard_detail') // Table name no longer needs {}
          ->fields(array(
            'idgiftcard' => $idgiftcard,
            'type' => $type,
            'concept' => $description,
            'charge' => $charge,
            'idorder' => $idorder,
            'idtransaction' => $idtransaction,
            'state' => 1,
            'created' => date('Y-m-d H:i:s'),
            'user' => $user->uid,
          ))
          ->execute();


}



function giftcard_page_myaccount(){


// global $user;
// dsm($user);
//LISTADO DE GIFTCARD

 global $user;

  if(!$user->uid)
    drupal_goto("login",array('query'=>drupal_get_destination()));

$header = array(
             array('data' => t('')), // sort
             array('data' => t('Gift Card Number'), 'field' => 'code'),
             // array('data' => t('Activation Date'), 'field' => 'start_date'),
             array('data' => t('Balance on Gift Card'), 'field' => 'balance_value'),
           );

    //query
    $query = db_select('giftcard', 'g');

    $query->fields('g', array('id', 'code', 'original_value','balance_value','client','start_date','end_date','service_fee','status',"created"))
    ->condition("client" , $user->uid , "=");
    $table_sort = $query->extend('TableSort') // Add table sort extender.
                        ->orderByHeader($header); // Add order by headers.
    $pager = $table_sort->extend('PagerDefault')
                        ->limit(15); // 5 rows per page.
    $result = $pager->execute();

    $rows = array();
    $logo = "<img src='/sites/all/themes/bootstrap_dealcountry/images/gifcard.jpg' />";
    foreach($result as $res){

      // SI EL GIFTCARD TIENE UNA ORDEN EN ESTADO ON REQUEST
      $es_onrequest = giftcard_ordenes_pendientes($res->id);
      if($es_onrequest){
        $preview_message = "<br>* Balance before shipping fees and taxes added, if applicable.";
      }else
        $preview_message = "";


      $rows[] = array(
        $logo, 
        $res->code.'-'.$res->id , 
        // $res->start_date , 
        "$ " . $res->balance_value  . $preview_message );

    }
    $output = theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('id' => 'sort-table','class'=>"giftcards")));
    $output .= theme('pager');
    $vacio = "";
    if(count($rows) == 0){
      $vacio = "<br>You don´t have any Gift Cards registered. Add a new Gift Card <a href=\"myaccount/register-giftcard\">HERE.</a>";
    }
    $table = $output.$vacio ;

// TABLE TRANSACTION
    $header = array(
             array('data' => t('')), // sort
             array('data' => t('Gift Card Number'), 'field' => 'idgiftcard'),
             array('data' => t('Transaction Date'), 'field' => 'created' , 'sort' => 'desc'),
             array('data' => t('Funds Added'), 'field' => 'charge'),
             
           );

    //query
    $query = db_select('transaction', 't');

    $query->fields('t', array('id', 'charge','created'));
    $query->addField('g','code','code');
    $query->addField('g','id','idgiftcard');
    $query->leftjoin("giftcard" , 'g', 'g.id = t.idgiftcard');
    $query->condition("t.client" , $user->uid , "=");
    $query->condition("t.status" , 1 , "=");
    $query->orderBy('t.id',"desc");
    $table_sort = $query->extend('TableSort') // Add table sort extender.
                        ->orderByHeader($header); // Add order by headers.
    $pager = $table_sort->extend('PagerDefault')
                        ->limit(8); // 5 rows per page.
    $result = $pager->execute();

    $rows = array();
    foreach($result as $res){
      $codeID =  (strpos($res->code, "EG") === false)?$res->idgiftcard:"XXXX";
      $rows[] = array(
        $logo, 
        $res->code .'-'.  $codeID , 
        $res->created ,
        "$ " . $res->charge );

    }
    $output = theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('id' => 'sort-table')));
    $output .= theme('pager');
    $table2 = $output ;



    drupal_set_title("My Gift Cards");
    $page = "<a href=\"/myaccount/register-giftcard\">+ Register Gift Card</a>";

    $title2 = "<h3 class='subtitle'>Transaction History for Added Funds</h3>";


    return  $page.$table."<p></p>".$title2.$table2;

}

function giftcard_page_purchase(){
	
// global $user; 

   global $user;

  if(!$user->uid)
    drupal_goto("login",array('query'=>drupal_get_destination()));

$query = db_select('orders', 'o')

    ->fields('o', array('id', 'idoffer', 'idgiftcard','status','created','html'));
    $query->addField("g","code","code");
    $query->addField("g","id","idgift");
    $query->leftjoin("giftcard" , "g" , "g.id = o.idgiftcard");
    $query->condition("o.client" , $user->uid , "=");
    $query->orderBy("o.id","DESC");
    $rs = $query->execute()->fetchAll();
    $offers = "";
    foreach ($rs as  $row) {
    	// dsm($value);
      switch ($row->status) {
        case '1':
          $status_label = "On Request";
          break;
case '2':
          $status_label = "Delivered";
          break;
          case '3':
          $status_label = "Canceled";
          break;

}
    $args = array($row->idoffer);
		$view = views_get_view('selected_deal');

		$offers .=  "<div class=\"purchase html\">";
		$offers .=  $row->html;
		$offers .=  "<div class=\"details\">"
					."<span class=\"wrapper\"> <span class=\"label\">Purchase Date</span><span class=\"data\">".$row->created ."</span> </span>"
					."<span class=\"wrapper\"> <span class=\"label\">Paid with Gift Card</span><span class=\"data\">".$row->code . '-'.$row->idgift."</span> </span>"
					."</div>";
		$offers .=  "</div>";

    }


	return $offers;
}


function giftcard_page_add_funds(){
	
//GENERAR ORDEN DE PAGO
 global $user;

  if(!$user->uid)
    drupal_goto("login",array('query'=>drupal_get_destination()));	

$form = drupal_get_form("giftcard_page_add_funds_form");
// $form2 = drupal_get_form("giftcard_pay_user_settings_form");
$html = drupal_render($form);


return $html;


}

function giftcard_mygiftcard_options($uid){

  $sql = "select  id , code, balance_value from giftcard where client = $uid and status = 1 and state = 1";
  $rs = db_query($sql);
  $gifts = $rs->fetchAll();
 // dsm($sql);
 // dsm($gifts);
  $data = array();
  if(count($gifts) > 0){
    foreach ($gifts as  $value) {
      # code...
      $data[$value->code . "-" . $value->id] =  $value->code . "-" . $value->id. " - $ " . $value->balance_value;

    }

  }else{
  }
    $data["new"] = "Using a new Gift Card";

return $data;
}


function giftcard_page_add_funds_form($form_state){
	
//REVISAMOS SI PROVIENE DE UNA ORDER DE COMPRA PARA VOLVER A SU COMPRA
$order  = @$_GET['pendent_order'];
if(!empty($order)){
  $_SESSION['pendent_order'] = $order;
}else{
  unset($_SESSION['pendent_order']);
}


global $user; 

$form['code'] = array(
          '#type' => 'select',
          '#title' => t('Select your Gift Card:'),
          '#options' => giftcard_mygiftcard_options($user->uid),
          '#attributes' => array('class'=>array('part1')),
        );


$form['newcode'] = array(
          '#type' => 'textfield',
          '#title' => t('Gift Card number:'),
          // '#required' => TRUE,
          '#default_value'=>"",
          '#attributes' => array('class'=>array('part2'),'placeholder'=>array('..-.......-....')),
        );

$form['amount'] = array(
          '#type' => 'textfield',
          '#title' => t('Select the amount:'),
          '#required' => TRUE,
          // '#default_value'=>"5.00",
          '#attributes' => array('class'=>array('part3'),'placeholder'=>array('$5.00 is the minimum charge required')),

        );


  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Go to Payment Gateway',
  );

  return $form;
}

function giftcard_page_add_funds_form_validate($form, &$form_state) {

if($form_state['values']['amount'] < 5  ){
    form_set_error('amount', '$ 5.00 is the minimum to charge');
  }

  if($form_state['values']['code'] == 'new' && empty($form_state['values']['newcode']) ){
    form_set_error('newcode', 'Enter a new Gift Card code');
  }

  //VALIDAR GIFTCARD
  if($form_state['values']['code'] == 'new'){
    $code = $form_state['values']['newcode'];
  }else{
    $code = $form_state['values']['code'];
  }

   if( empty($code) ){
    form_set_error('newcode', 'Enter a new Gift Card code');
  }

  $sql = "select *  from giftcard g 
     where g.state = 1 and g.status = 1 and  CONCAT(code,'-',id) = '".$code."'";
  // drupal_set_message(t($sql), 'status', FALSE);
  $rs = db_query($sql);
    
    $giftcard = $rs->fetchObject();  
    $alert = "";
    
    
    if(!$giftcard){
      // return array("validate"=>FALSE , "message"=>"The giftcard doesn't exists or is invalid", "alert"=>$alert );
      form_set_error('newcode', "The Gift Card doesn't exists or is invalid");
    }else{

      global $user;
      $uid = $user->uid;

      if ($giftcard->client != $uid and !is_null($giftcard->client)) {
        // return array("validate"=>FALSE , "message"=>"this giftcard has other owner , please contact with the administrator", "alert"=>$alert );
        form_set_error('newcode', "this Gift Card has other owner , please contact with the administrator");
        
      }
      $form_state['values']['validatecode'] = $giftcard->id;
      //REGISTRAR NUEVA GIFTCARD AL USUARIO
      db_query("update giftcard set client = $uid  where id =".$giftcard->id);
      
    }


}

function giftcard_page_add_funds_form_submit($form, &$form_state) {
 
global $user;
// GENERAR INVOICEORDER
$nid = db_insert('transaction') // Table name no longer needs {}
          ->fields(array(
            'idgiftcard' => $form_state["values"]['validatecode'],
            'type' => 1,
            'charge' => $form_state["values"]['amount'],
            'client' => $user->uid,
            'created' => date('Y-m-d H:i:s'),
            'user' => $user->uid,
          ))
          ->execute();

$_SESSION['formvalues'] = $form_state["values"];
$_SESSION['formvalues']["invoice"] = $nid;

drupal_goto("myaccount/addfunds/payment");

}




function giftcard_page_add_funds_payment(){

require_once 'anet_php_sdk/AuthorizeNet.php'; // Include the SDK you downloaded in Step 2
$api_login_id = '3LunE32TE4';
$transaction_key = '977n9uYxMk866Uev';
$amount = $_SESSION['formvalues']['amount'];
$fp_timestamp = time();
$fp_sequence = $_SESSION['formvalues']['invoice'];// Enter an invoice or other unique number.
$fingerprint = AuthorizeNetSIM_Form::getFingerprint($api_login_id,
  $transaction_key, $amount, $fp_sequence, $fp_timestamp);
global $user, $base_url;

$html= <<<EOD
<h3> Please , wait a moment .... </h3>
<form id='frm-addfunds' name='frm-addfunds' method='post' action="https://secure.authorize.net/gateway/transact.dll" style='display:none;'>
<input type='hidden' name="x_login" value="{$api_login_id}" />
<input type='hidden' name="x_fp_hash" value="{$fingerprint}" />
<input type='hidden' name="x_amount" value="{$amount}" />
<input type='hidden' name="x_fp_timestamp" value="{$fp_timestamp}" />
<input type='hidden' name="x_fp_sequence" value="{$fp_sequence}" />
<input type='hidden' name="x_invoice_num" value="{$fp_sequence}" />
<INPUT TYPE=HIDDEN NAME="x_description" VALUE="Add funds to Gift Card.">
<input type='hidden' name="x_version" value="3.1">
<input type='hidden' name="x_method" value="cc">
<input type='hidden' name="x_show_form" value="payment_form">
<INPUT TYPE=HIDDEN NAME="x_cust_id" VALUE="{$user->uid}">
<INPUT TYPE=HIDDEN NAME="x_receipt_link_method" VALUE="POST">
<INPUT TYPE=HIDDEN NAME="x_receipt_link_text" VALUE="Click here to return to our home page">
<INPUT TYPE=HIDDEN NAME="x_receipt_link_URL" VALUE="{$base_url}/myaccount/fundsreceipt">
<INPUT TYPE=HIDDEN NAME="x_header_html_payment_form" VALUE="Payment Gateway<style>
#divMerchantHeader{background:#f5f5f5; color:#97310e;margin-top: 15px;}
#divPage{background:#fff;}</style>">
<INPUT TYPE=HIDDEN NAME="x_color_background" VALUE="#E3E9F1">
<INPUT TYPE=HIDDEN NAME="x_logo_url" VALUE="http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/logosmall.png">
<INPUT TYPE=HIDDEN NAME="x_cancel_url" VALUE="http://www.dealcountry.com/myaccount">
<INPUT TYPE=HIDDEN NAME="x_cancel_url_text" VALUE="Return to Dealcountry">
<input type='submit' value="Click here for the secure payment form">
</form>
<script>
  jQuery('#frm-addfunds').submit();
</script>
EOD;

unset($_SESSION['formvalues']);
return $html;



}

/* LISTADO ADMINISTRACION DE ORDENES DE COMPRA */
function giftcard_list_orders_form($node, &$form_state){
$header = array(
             array('data' => t('ID'), 'field' => 'id', 'sort' => 'desc'), // sort
             array('data' => t('Offer'), 'field' => 'title'),
             array('data' => t('Code'), 'field' => 'code'),
             array('data' => t('User'), 'field' => 'name'),
             array('data' => t('Balance value'), 'field' => 'balance_value'),
             array('data' => t('Charge'), 'field' => 'charge'),
             array('data' => t('Shipping'), 'field' => 'shipping'),
             array('data' => t('Taxes'), 'field' => 'taxes'),
             array('data' => t('Extra charge'), 'field' => 'extra'),
             array('data' => t('Final Charge'), 'field' => 'final_charge'),
             array('data' => t('Order Details'), 'field' => 'order_details'),
             array('data' => t('Created'), 'field' => 'created'),
             array('data' => t('Delivered Date'), 'field' => 'delivered_date'),
             array('data' => t('Status'), 'field' => 'status'),
             array('data' => t('Actions'), ),
           );

$form = array();
 /*
 $form['linksactions'] = array(
  '#markup' => 
  "<a href='/admin/giftcard/orders/add'> + Create Purchase</a> "
 
  );*/

$form['filter'] = array(
  '#type' => 'fieldset',
  '#collapsible' => TRUE,
  '#collapsed' => FALSE,
  '#title' => t('Filter option')
);
$form['filter']['status'] = array(
  '#type' => 'select',
  '#title' => t('Status'),
  '#options' => array(
          "all" => t('all'),
          1 => t('On Request'),
          2 => t('Delivered'),
          3 => t('Canceled'),
       ),
  // '#default_value'=>(!empty($_SESSION["giftcard"]["CODE"]))?$_SESSION["giftcard"]["CODE"]:"",
);


$form['filter']['submit'] = array(  '#type' => 'submit',  '#value' => t('Filter'),);



//query
// select o.id , o.idoffer , o.title , 
// g.code , u.name , g.balance_value , o.charge , o.order_details , o.status   , o.created
// from orders o
// left join users u on u.uid = o.client
// left join giftcard g on g.id = o.idgiftcard
// ;

$query = db_select('orders', 'o');

    $query->fields('o', array('id', 'idoffer', 'title','charge','shipping' , 'taxes' ,"extra", 'final_charge', 'delivered_date', 'order_details','status','created'));
    $query->fields('g', array('code', 'balance_value'));
    $query->fields('u', array('name'));
    $query->addField("g","id","idgiftcard");
    $query->leftjoin("users" , "u" , "u.uid = o.client");
    $query->leftjoin("giftcard" , "g" , "g.id = o.idgiftcard");
    // $query->orderBy("o.created","DESC");

    $table_sort = $query->extend('TableSort') // Add table sort extender.
                        ->orderByHeader($header); // Add order by headers.
    
    $pager = $table_sort->extend('PagerDefault')
                        ->limit(15); // 5 rows per page.
    // dsm($form_state);
    if (!empty($_SESSION["giftcard"]["orders"]["status"]) and $_SESSION["giftcard"]["orders"]["status"] != "all") {
          $query->condition('o.status',  $_SESSION["giftcard"]["orders"]["status"] , '=');
    }         
             


    $result = $pager->execute();

            

    $rows = array();
    foreach($result as $res){
      switch ($res->status) {
        case '1':
          $status_label = "On Request";
          break;
          case '2':
          $status_label = "Delivered";
          break;
          case '3':
          $status_label = "Canceled";
          break;
}
      $rows[$res->id] = array($res->id, 
                              // $res->title,
                              "<a href='/admin/giftcard/orders/view/".$res->id."'>".$res->title."</a>",
                              // $res->title,
                              $res->code, 
                              $res->name ,
                              // $res->balance_value,
                              "$ ".giftcard_balance_value_enable($res->idgiftcard),
                              "$ ".$res->charge,
                              "$ ".$res->shipping,
                              "$ ".$res->taxes,
                              "$ ".$res->extra,
                              "$ ".$res->final_charge,
                              $res->order_details,
                              $res->created , 
                              $res->delivered_date , 
                              $status_label  , 
                              _giftcard_orders_generate_options($res->id));

    }

// global $pager_page_array, $pager_total, $pager_total_items, $pager_limits;
// dsm($pager_total_items);
// dsm($pager_limits);
// $form['tablecount'] = array('#markup' => $result->rowCount());


// $form['table'] = array(
//   '#type' => 'tableselect',
//   '#header' => $header,
//   '#options' => $rows,
//   '#empty' => t('Table has no row!')
// );

$form['table'] = array(
      '#theme' => 'table',
      '#header' => $header,
      '#rows' => $rows,
      '#empty' => t('Empty Rows')
      );

$form['pager'] = array('#markup' => theme('pager'));

return $form;
}



function giftcard_list_orders_form_submit($form, &$form_state) {

   $_SESSION["giftcard"]["orders"]["status"] = $form_state['values']['status'];   
   $form_state['rebuild'] = TRUE;


}


function giftcard_list_orders_view(){

  $idorder = arg(4);
  //DATOS DEL PEDIDO
  $rs = db_query(" select o.id , o.idoffer , o.title , o.taxes , o.shipping , o.final_charge , o.delivered_date,
g.code , u.name , g.balance_value , o.charge , o.order_details , o.status   , o.created , o.comment
, o.sh_name , o.sh_last_name , o.sh_email , o.sh_telephone , o.sh_address , o.sh_suite , 
o.sh_city , o.sh_postalcode , g.id as idgiftcard
from orders o
left join users u on u.uid = o.client
left join giftcard g on g.id = o.idgiftcard where o.id = $idorder");


  $order = $rs->fetchObject();
  $page = "";
  $balance_contable = giftcard_balance_value_enable($order->idgiftcard);
  if($order->status == 1 )
    $label_status = "On request";
  elseif($order->status == 2)
    $label_status = "Delivered";
  elseif($order->status == 3)
    $label_status = "Canceled";




  $page = <<<EOD
  <fieldse class="datainformation">  
    <h3> Offer information:</h3>
    <div class="row">
        <span class="label"><b>Offer:</b></span>
        <span class="text">{$order->title}</span>
    </div>
    <div class="row">
        <span class="label"><b>Cost:</b></span>
        <span class="text">$ {$order->charge}</span>
    </div>
     <div class="row">
        <span class="label"><b>Shipping:</b></span>
        <span class="text">$ {$order->shipping}</span>
    </div>
     <div class="row">
        <span class="label"><b>Taxes:</b></span>
        <span class="text">$ {$order->taxes}</span>
    </div>
     <div class="row">
        <span class="label"><b>Final charge:</b></span>
        <span class="text">$ {$order->final_charge}</span>
    </div>
    <div class="row">
        <span class="label"><b>Gift Card:</b></span>
        <span class="text">{$order->code}</span>
    </div>
    <div class="row">
        <span class="label"><b>Gift Card balance:</b></span>
        <span class="text">$ {$balance_contable}</span>
    </div>
    <div class="row">
        <span class="label"><b>Order Details:</b></span>
        <span class="text"> {$order->order_details}</span>
    </div>
    <div class="row">
        <span class="label"><b>Order Status:</b></span>
        <span class="text"> {$label_status}</span>
    </div>
    <div class="row">
        <span class="label"><b>Delivered date:</b></span>
        <span class="text"> {$order->delivered_date}</span>
    </div>
    <div class="row">
        <span class="label"><b>Comment:</b></span>
        <span class="text"> {$order->comment}</span>
    </div>
  <h3>Shipping Information:</h3>
  <div class="row">
        <span class="label"><b>First Name:</b></span>
        <span class="text">{$order->sh_name}</span>
    </div>
    <div class="row">
        <span class="label"><b>Last Name:</b></span>
        <span class="text">{$order->sh_last_name}</span>
    </div>
    <div class="row">
        <span class="label"><b>Email:</b></span>
        <span class="text">{$order->sh_email}</span>
    </div>
    <div class="row">
        <span class="label"><b>Telephone:</b></span>
        <span class="text">{$order->sh_telephone}</span>
    </div>
    <div class="row">
        <span class="label"><b>Address:</b></span>
        <span class="text">{$order->sh_address}</span>
    </div>
    <div class="row">
        <span class="label"><b>Suite:</b></span>
        <span class="text">{$order->sh_suite}</span>
    </div>
    <div class="row">
        <span class="label"><b>City:</b></span>
        <span class="text">{$order->sh_city}</span>
    </div>
    <div class="row">
        <span class="label"><b>Postal Code:</b></span>
        <span class="text">{$order->sh_postalcode}</span>
    </div>
   
    



  </fieldse>


EOD;


  return $page;
}



/* Saldo disponible de un gifcard
  es la suma del balance_value del gift card + el monto de los pedidos aun pendientes
  */
function giftcard_balance_value_enable($idgiftcard){

    
  if(empty($idgiftcard))
    return 0;

  $rs = db_query('SELECT balance_value FROM giftcard where id = '.$idgiftcard);
  $obj = $rs->fetchObject();

  $rs = db_query('SELECT sum(charge) as total FROM orders where idgiftcard = '.$idgiftcard . ' and status = 1 ');
  $obj2 = $rs->fetchObject();

  $total = $obj->balance_value + $obj2->total;

  return $total;

}


/*
  Edicion de compras en la administracion
*/
function giftcard_list_orders_edit_form($node, &$form_state){


 $idorder = arg(4);
  //DATOS DEL PEDIDO
  $rs = db_query(" select o.id , o.idoffer , o.title , 
g.code , u.name , g.balance_value , o.charge , o.order_details , o.status   , o.created
, o.sh_name , o.sh_last_name , o.sh_email , o.sh_telephone , o.sh_address , o.sh_suite , 
o.sh_city , o.sh_postalcode , g.id as idgiftcard
from orders o
left join users u on u.uid = o.client
left join giftcard g on g.id = o.idgiftcard where o.id = $idorder");


  $order = $rs->fetchObject();
  $page = "";
  $balance_contable = giftcard_balance_value_enable($order->idgiftcard);
  if($order->status == 1 )
    $label_status = "On Request";
  elseif($order->status == 2 ){
    $label_status = "Delivered";
    drupal_set_message(t("this Purschase has already been Delivered ."), 'status', FALSE);
    drupal_goto("admin/giftcard/orders");
  }
  elseif($order->status == 3 ){
    $label_status = "Canceled";
    drupal_set_message(t("this Purschase has already been Canceled ."), 'status', FALSE);
    drupal_goto("admin/giftcard/orders");
  }




$html = <<<EOD
<h3> Offer information:</h3>
    
    <div class="row">
        <span class="label"><b>Details:</b></span>
        <span class="text">{$order->order_details}</span>
    </div>
    <div class="row">
        <span class="label"><b>Gift Card:</b></span>
        <span class="text">{$order->code}-{$order->idgiftcard}</span>
    </div>
    <div class="row" style="font-size: 20px;">
        <span class="label"><b>Gift Card balance:</b></span>
        <span class="text">$ {$balance_contable}</span>
    </div>
    
    <div class="row" style="font-size: 20px;">
        <span class="label"><b>Cost:</b></span>
        <span class="text">$ {$order->charge}</span>
    </div>
    <div class="row">
        <span class="label"><b>Offer:</b></span>
        <span class="text">{$order->title}</span>
    </div>
    <div class="row">
        <span class="label"><b>User:</b></span>
        <span class="text">{$order->name}</span>
    </div>
    <div class="row">
        <span class="label"><b>Order Status:</b></span>
        <span class="text"> {$label_status}</span>
    </div>
EOD;

$form['hmtl'] = array('#markup' => $html);


$form['idorder'] = array(
    '#type' => 'hidden',
    '#value' => $idorder,
  );

$form['balance_value'] = array(
    '#type' => 'hidden',
    '#value' => $order->balance_value,
  );

$form['balance_contable'] = array(
    '#type' => 'hidden',
    '#value' => $balance_contable,
  );


$form['charge'] = array(
    '#type' => 'hidden',
    '#value' => $order->charge,
  );

$form['idgiftcard'] = array(
    '#type' => 'hidden',
    '#value' => $order->idgiftcard,
  );
$form['giftcode'] = array(
    '#type' => 'hidden',
    '#value' => $order->code,
  );
$form['status'] = array(
    '#type' => 'hidden',
    '#value' => $order->status,
  );



$form['shipping'] = array(
    '#type' => 'textfield',
    '#title' => t('Shipping:'),
    '#required' => TRUE,
    '#default_value'=>0
  );

$form['taxes'] = array(
    '#type' => 'textfield',
    '#title' => t('Taxes:'),
    '#required' => TRUE,
    '#default_value'=>0
  );

$form['extra'] = array(
    '#type' => 'textfield',
    '#title' => t('Extra Charge:'),
    '#required' => TRUE,
    '#default_value'=>0
  );
 $form['total'] = array(
   '#markup' => "<div id=\"chargetotal\">
                 <span class=\"label\"><b>Final charge:</b> $ 
                 <span id=\"amount\">$order->charge</span> </span>
                 </div><br /> "
 );

$form['alert'] = array(
'#markup'=> '<div id="alert"></div>',
  );

  $form['comment'] = array(
    '#type' => 'textarea',
    '#title' => t('Comments:'),
    '#required' => TRUE,
    // '#default_value'=>0
  );
  // Adds a simple submit button that refreshes the form and clears its contents -- this is the default behavior for forms.
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Deliver Purchase',
  );

return $form;

}

function giftcard_list_orders_edit_form_validate($form, &$form_state) {



  //VALIDACION PARA GIFTCARDS CON  USO COMBINADO
  if(!empty($values["idgiftcard"])){

        $values = $form_state['values'];

        //NO SE PUEDE REACTUALIZAR UN PEDIDO YA ENTREGADO
        if($values["status"]== 2){
          form_set_error('status', 'This Purchase has been Delivered already.');
        }

       //VALIDACION DE QUE EL GIFTCARD TIENE DINERO
        if($values["balance_contable"] < 1){
          form_set_error('status', 'The Gift Card don\'t have enough money');
        }

        //VALIDAR QUE SHIPPING + TAXES  NO SUPEREN EL BALANCE_VALUE DEL GIFTCARD
        $balance_value_available = giftcard_balance_value_enable($values["idgiftcard"]);
        $shipping = $values['shipping'];
        $taxes = $values['taxes'];
        $charge = $values["charge"];
        $extra = $values["extra"];

        if( ($shipping + $taxes + $charge + $extra ) > $balance_value_available ){
          form_set_error('shipping');
          form_set_error('Exceded');
          form_set_error('extra');
          form_set_error('taxes');
          drupal_set_message(t("The Gift Card don't have enough money, "), 'error', FALSE);

        }

  }


}



function giftcard_list_orders_edit_form_submit($form, &$form_state) {
  
$shipping = $form_state['values']['shipping'];
$taxes = $form_state['values']['taxes'];
$extra = $form_state['values']['extra'];
$extra_charge = $shipping + $taxes + $extra; 

$comment = $form_state['values']['comment'];
// $status = $form_state['values']['status'];
$idorder = $form_state['values']['idorder'];
$delivered_date = date("Y-m-d H:s:i");
//update Order
$rs  = db_query("update orders set 
                  shipping = $shipping ,
                  taxes = $taxes , 
                  extra = $extra ,
                  final_charge = final_charge + $extra_charge , 
                  comment = '$comment' , 
                  status = 2  ,
                  delivered_date = '$delivered_date'  
                  where id = $idorder");


  if(!empty($form_state['values']['idgiftcard'])){
      //AGREGAR GIFTCARD DETAILS POR EXTRA CHARGE
      $idgiftcard = $form_state['values']['idgiftcard'];
      $type = 5;
      $description = 'Extra charge';
      $charge = $extra_charge;

      giftcard_register_detail($idgiftcard , $type , $description , $charge , $idorder   );
      //ACUDATE BALANCE VALUE WITH EXTRA CHARGE
      giftcard_discrease_balance_value( 0  , $nid = 0  , $charge ,$idgiftcard);
  }


 drupal_set_message(t("The purchase has been updated."), 'status', FALSE);
 drupal_goto("admin/giftcard/orders");
 
}



function giftcard_list_orders_cancel_form($node, &$form_state){

  $idorder = arg(4);
  //DATOS DEL PEDIDO
  $rs = db_query(" select o.id , o.idoffer , o.title , 
g.code , u.name , g.balance_value , o.charge , o.order_details , o.status   , o.created
, o.sh_name , o.sh_last_name , o.sh_email , o.sh_telephone , o.sh_address , o.sh_suite , 
o.sh_city , o.sh_postalcode , g.id as idgiftcard
from orders o
left join users u on u.uid = o.client
left join giftcard g on g.id = o.idgiftcard where o.id = $idorder");




  $order = $rs->fetchObject();
  $page = "";

  $balance_contable = giftcard_balance_value_enable($order->idgiftcard);
  if($order->status == 1 )
    $label_status = "On request";
  else
    $label_status = "Delivered";


if($order->status == 2){
  drupal_set_message(t("this Purschase has already been Delivered ."), 'status', FALSE);
  drupal_goto("admin/giftcard/orders");
}elseif($order->status == 3){
  drupal_set_message(t("this Purschase has already been Canceled ."), 'status', FALSE);
  drupal_goto("admin/giftcard/orders");
}

$form['idorder'] = array(
    '#type' => 'hidden',
    '#value' => $idorder,
  );

$form['balance_value'] = array(
    '#type' => 'hidden',
    '#value' => $order->balance_value,
  );


$form['charge'] = array(
    '#type' => 'hidden',
    '#value' => $order->charge,
  );

$form['idgiftcard'] = array(
    '#type' => 'hidden',
    '#value' => $order->idgiftcard,
  );

$form['status'] = array(
    '#type' => 'hidden',
    '#value' => $order->status,
  );

$form['alert'] = array(
'#markup'=> '<h2>Are you sure to delete this purchase ? </h2>',
  );

$form['comment'] = array(
    '#type' => 'textarea',
    '#title' => t('Comments:'),
  );
 $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Accept',
  );


  $form['cancel'] = array(
    '#type' => 'submit',
    '#value' => 'Cancel',
  );

return $form;
}


function giftcard_list_orders_cancel_form_submit($form, &$form_state){



  if($form_state['clicked_button']["#value"] == "Accept"){
    //ACTUALIZAR PEDIDO A CANCELADO
  $shipping     = $form_state['values']['shipping'];
  $taxes        = $form_state['values']['taxes'];
  $extra_charge = $shipping + $taxes; 
  $comment      = $form_state['values']['comment'];
  // $status = $form_state['values']['status'];
  $idorder      = $form_state['values']['idorder'];
  $delivered_date = date("Y-m-d H:s:i");
  //update Order
  $rs  = db_query("update orders set 
                    comment = '$comment' , 
                    status = 3  
                    where id = $idorder");
    //ACTUALIZAR GIFTCARD DETALLE 
  $idgiftcard = $form_state['values']['idgiftcard'];

  $rs  = db_query("update giftcard_detail set 
                    state = 0  
                    where idorder = $idorder");
      
  //Actualizar balance_value
  $charge = $form_state['values']['charge'];
  
  if(!empty( $idgiftcard))
    db_query("update giftcard set balance_value = balance_value + $charge where id =$idgiftcard ");
          
  drupal_set_message(t("The Purschase has been canceled."), 'status', FALSE);

  }

 drupal_goto("admin/giftcard/orders");

}

/*
* Edicion de una Gifcard en la administracion
*/
function giftcard_list_edit_form($node, &$form_state){


 $idgiftcard = arg(3);
  //DATOS DEL PEDIDO
  $rs = db_query("select g.id , g.code,g.balance_value , g.status , u.name ,g.service_fee ,g.start_date
    from giftcard g
  left join users u on u.uid = g.client
    where g.id = $idgiftcard");


  $giftcard = $rs->fetchObject();
  $page = "";
  $balance_available = giftcard_balance_value_enable($giftcard->id);
  if($giftcard->status == 0 )
    $label_status = "Inactive";
  elseif($giftcard->status == 1 ){
    $label_status = "Active";

  }
  elseif($giftcard->status == 2 ){
    $label_status = "Expired";
    
  }




$html = <<<EOD
<h3> Gift Card information:</h3>
    <div class="row">
        <span class="label"><b>Gift Card code:</b></span>
        <span class="text">{$giftcard->code}-{$giftcard->id}</span>
    </div>
    
    <div class="row">
        <span class="label"><b>Client:</b></span>
        <span class="text">{$giftcard->name}</span>
    </div>
    
    
EOD;

$form['hmtl'] = array('#markup' => $html);

$form['balance_value'] = array(
    '#type' => 'hidden',
    '#value' => $giftcard->balance_value,
  );


$form['idgiftcard'] = array(
    '#type' => 'hidden',
    '#value' => $idgiftcard,
  );



$form['amount'] = array(
    '#type' => 'textfield',
    '#title' => t('Update Amout to Gift Card:'),
    '#required' => TRUE,
    '#default_value'=>$giftcard->balance_value
  );

    $form['startdate'] = array(
      '#type' => 'date_popup',
      // '#date_timezone' => date_default_timezone(),
      '#date_format' => 'Y-m-d',
      '#date_year_range' => '-3:+3',
      '#title' => "Start Date:",
     '#default_value'=>$giftcard->start_date

    
    );

$form['service_fee'] = array(
    '#type' => 'textfield',
    '#title' => t('Edit Service Fee:'),
    '#required' => TRUE,
    '#default_value'=>$giftcard->service_fee
  );

$form['status'] = array(
  '#type' => 'select',
  '#title' => t('Status'),
  '#options' => array(
          
          0 => t('Inactive'),
          1 => t('Active'),
          2 => t('Expired'),
       ),
  '#default_value'=>$giftcard->status,
);


$form['alert'] = array(
'#markup'=> '<div id="alert"></div>',
  );

  $form['comment'] = array(
    '#type' => 'textarea',
    '#title' => t('Comments:'),
    '#required' => TRUE,
    // '#default_value'=>0
  );
  // Adds a simple submit button that refreshes the form and clears its contents -- this is the default behavior for forms.
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );

  $form['Delete'] = array(
    '#type' => 'submit',
    '#value' => 'Delete',
  );

return $form;

}


function giftcard_list_edit_form_submit($form, &$form_state) {

$values = $form_state["values"];
$idgiftcard = $values["idgiftcard"];
$balance_value = $values["balance_value"];
$amount = $values["amount"];
$service_fee = $values["service_fee"];
$status = $values["status"];
$comment = $values["comment"];
$startdate = $values["startdate"];

if($form_state['clicked_button']["#value"] == "Delete"){

  db_query('update giftcard set state = 0 where id ='.$idgiftcard);
  giftcard_register_detail($idgiftcard , 
    $type  = 8, 
    $description  = 'gift card delete by administor'.$comment, 
    $charge  = 0, 
    $idorder = 0   );
  drupal_set_message(t("The purchase has been deleted."), 'status', FALSE);
  drupal_goto("admin/giftcard");
}else{

  if($amount != $balance_value){

    $new_amount = abs($amount - $balance_value);
    db_query('update giftcard set balance_value = '.$amount.' , service_fee = '.$service_fee.' , status = '.$status.' where id ='.$idgiftcard);
    giftcard_register_detail($idgiftcard , $type  = 9, $description  = 'Administrator changed the balance value '.$comment , $charge  = $new_amount, $idorder = 0   );
  drupal_set_message(t("The purchase has been updated."), 'status', FALSE);
  drupal_goto("admin/giftcard");

  }else{

  db_query("update giftcard set 
    service_fee = ".$service_fee." , 
    start_date ='".$startdate."' , 
    status = ".$status." 
    where id =".$idgiftcard);
   
  drupal_set_message(t("The purchase has been updated."), 'status', FALSE);
  drupal_goto("admin/giftcard");


    }
  }  
}



function giftcard_list_view(){
$idgiftcard = arg(3);



$header = array(
             array('data' => t('Date'), 'field'=> 'created'), // sort
             array('data' => t('Type'), 'field'=> 'type'), // sort
             array('data' => t('Concept'), 'field' => 'concept'),
             array('data' => t('Charge'), 'field' => 'charge'),
             array('data' => t('Order'), 'field' => 'order'),
             array('data' => t('Transaction'), 'field' => 'code_transaction'),
             
           );

//query
$query = db_select('giftcard_detail', 'gd');

    $query->fields('gd', array('type', 'concept', 'charge','created'));
    $query->addField('o', 'title','ordertitle');
    $query->addField('t', 'code_transaction','transaction');
    $query->leftjoin('orders' ,'o','o.id = gd.idorder');
    $query->leftjoin('transaction' ,'t','t.id = gd.idtransaction');
    $query->condition("gd.idgiftcard" ,$idgiftcard , "=");
    $table_sort = $query->extend('TableSort') // Add table sort extender.
                        ->orderByHeader($header); // Add order by headers.
    $pager = $table_sort->extend('PagerDefault')
                        ->limit(15); // 5 rows per page.
    $result = $pager->execute();

    $rows = array();
    foreach($result as $res){

      $rows[] = array($res->created , $res->type , $res->concept , $res->charge , $res->ordertitle , $res->transaction );

    }
    $output = theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('id' => 'sort-table')));
    $output .= theme('pager');
    $table = $output ;


    return $table;

}



function giftcard_page_add_funds_payment_receipt(){
/*{"x_response_code":"1",
"x_response_reason_code":"1",
"x_response_reason_text":"(TESTMODE) This transaction has been approved.",
"x_avs_code":"P",
"x_auth_code":"000000",
"x_trans_id":"0",
"x_method":"CC",
"x_card_type":"Visa",
"x_account_number":"XXXX1111",
"x_first_name":"hjk",
"x_last_name":"jkh",
"x_company":"kjhkj",
"x_address":"kjh",
"x_city":"kjh",
"x_state":"kjhkj",
"x_zip":"hkj",
"x_country":"hjkh",
"x_phone":"hk",
"x_fax":"hkhk",
"x_email":"kjk",
"x_invoice_num":"",
"x_description":"",
"x_type":"auth_capture",
"x_cust_id":"",
"x_ship_to_first_name":"hjk",
"x_ship_to_last_name":"jkh",
"x_ship_to_company":"kjhkj",
"x_ship_to_address":"kjh",
"x_ship_to_city":"kjh",
"x_ship_to_state":"kjhkj",
"x_ship_to_zip":"hkj",
"x_ship_to_country":"hjkh",
"x_amount":"15.99",
"x_tax":"0.00",
"x_duty":"0.00",
"x_freight":"0.00",
"x_tax_exempt":"FALSE",
"x_po_num":"",
"x_MD5_Hash":"E446674E8082612607101911BC8112AF",
"x_cvv2_resp_code":"",
"x_cavv_response":"",
"x_test_request":"true"}
*/
   $data = $_POST;
   $datajson = json_encode($data);

//VALIDAR VALID INFORMATION OF AUTHORIZE NET

// VALIDATE TRNSACTION RESPONSE

// VALIDATE MESSAGE TO SHOW   

$num_updated = db_update('transaction') // Table name no longer needs {}
  ->fields(array(
     'code_transaction' => $data['x_trans_id'],
     'status' => $data['x_response_code'],
     'message_transaction' => $data['x_response_reason_text'],
     'auth_code' => $data['x_auth_code'],
     'card_type' => $data['x_card_type'],
     'account_number' => $data['x_account_number'],
     'code_transaction' => $data['x_trans_id'],
     'text_post' => $datajson,
  ))
  ->condition('id',$data['x_invoice_num'], '=')
  ->execute();

// UPDATE BALANCE IN GIFRCARD AND DETAILS
$sql = "select * from transaction where id =".$data['x_invoice_num'];
$rs = db_query($sql);
$row = $rs->fetchObject();

db_query("update giftcard set balance_value = balance_value + ".$data['x_amount']." where id = ".$row->idgiftcard);
giftcard_register_detail($row->idgiftcard , $type = 2 , $description = 'Add funds' , $data['x_amount'] , $idorder  = 0 , $data['x_invoice_num']  );          
drupal_set_message(t("Your transaction has been completed. Thank you!"), 'status', FALSE);
drupal_goto("myaccount");
return "";

}



function giftcard_page_register_giftcard_form($node, &$form_state){
  
  global $user; 



$form['giftcard'] = array(
          '#type' => 'textfield',
          '#title' => t('New Gift Card code:'),
          '#required' => TRUE,
          '#default_value'=>""
        );


  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Register Gift Card',
  );

  return $form;



}


function giftcard_page_register_giftcard_form_validate($form, &$form_state) {
  // $year_of_birth = $form_state['values']['year_of_birth'];
  // if ($year_of_birth && ($year_of_birth < 1900 || $year_of_birth > 2000)) {
  //   form_set_error('year_of_birth', 'Enter a year between 1900 and 2000.');
  // }

// global $user;
global $user;
$uid = $user->uid;
  //VALIDAR GIFT CARD
  $code = $form_state['values']['giftcard'];


$message = giftcard_register_to_user( $form_state["values"]["giftcard"] , $uid );


  if(!$message["response"])
    form_set_error('giftcard', $message["message"]);
  else
    drupal_set_message($message["message"], 'status', FALSE);


}

// function giftcard_page_register_giftcard_form_submit($form, &$form_state){
// drupal_set_message(t("hola submit"), 'status', FALSE);
// global $user;
// $uid = $user->uid;
// $message = giftcard_register_to_user( $form_state["values"]["giftcard"] , $uid );
// drupal_set_message($message["message"], 'status', FALSE);

// }


function giftcard_page_applicabletaxes(){
   $nid = arg(1);
$node = node_load($nid);
// print "<pre>";
// print_r($oferta);
//   print "$nid";
// print "</pre>";

// $node = node_load($nid);
$image = field_get_items('node', $node, 'field_deal_image_url');
$field_imagen = field_view_value('node', $node, 'field_deal_image_url', $image[0]);
$field_imagen = render($field_imagen);

$rest = field_get_items('node', $node, 'field_restrictions');
$rest = field_view_value('node', $node, 'field_deal_image_url', $rest[0]);
$rest = render($rest);

$body = field_get_items('node', $node, 'body');
$body = field_view_value('node', $node, 'field_deal_image_url', $body[0]);
$body = render($body);

print <<<EOD
<div class="wrap" style="width:800px; margin: 0 auto ;">
  <div class="header" style="overflow:hidden">
    <div class="image" style="float:left"><img src="{$field_imagen}" width="160" alt=""></div>
    <div class="title" style="margin-top:2em"><h4>{$node->title}</h4></div>
  </div>
  <div class="content">
    <div class="restrictions">
      <div class="" style="font-weight:bold;">Restrictions:</div>
      <div class="text">{$rest}</div>
    </div>
    <div class="description">
      <div class="" style="font-weight:bold;">Description:</div>
      <div class="text">{$body}</div>
    </div>
  </div>
  <div class="addfunds" style="text-align:center;">
  <a href="/myaccount/addfunds">
    <img src="/sites/all/themes/bootstrap_dealcountry/images/not-enough-funds.jpg" alt="">
  </a>
  </div>
</div>

EOD;

}


/*
Configuracion de email por envio de orden
*/
function giftcard_settings_form($node, &$form_state){


$form['mail'] = array(
    '#type' => 'textfield',
    '#title' => t('Email to send orders:'),
    '#required' => TRUE,
    '#default_value'=> variable_get('giftcard_mail', ""),
    '#size'=>30

  );


  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );
  return $form;
}


function giftcard_settings_form_validate($form, &$form_state){
  $mail = $form_state['values']['mail'];
  if (!valid_email_address($mail)) {
    form_set_error('mail', t('The email address appears to be invalid.'));
  }
}


function giftcard_settings_form_submit($form, &$form_state) {
   
variable_set('giftcard_mail', $form_state['values']['mail']);
 
}

function giftcard_mail($key, &$message, $params) {
  $headers = array(
    'MIME-Version' => '1.0',
    'Content-Type' => 'text/html; charset=UTF-8;',
    'Content-Transfer-Encoding' => '8Bit',
    'X-Mailer' => 'Drupal'
  );
  foreach ($headers as $key => $value) {
    $message['headers'][$key] = $value;
  }


  $message['subject'] = $params['subject'];
  $message['body'] = array();
  $message['body'][] = $params['body'];
  // $message['subject'] = t("@feed  confirmation", $params);
  // //$message['body'][] = t("Hello", $params);
  // $message['body'][] = t("Se importo el feed (@feed).", $params);
}


function giftcard_send_mail($params){

    $to = variable_get('giftcard_mail', 'support@dealcountry.com');
    //$from = 'noreply@dealcountry.com';
    $from = '"Dealcountry.com" <support@dealcountry.com>';
  
    drupal_mail('giftcard', 'orders', $to, language_default(), $params, $from, TRUE);

}


function giftcard_admin_addfunds(){

$html = drupal_get_form('giftcard_admin_addfunds_form');

return $html;

}


/*
  Actualizacion de gift cards en masa 
*/
function giftcard_admin_addfunds_form($node , &$form_state){

//LISTAR GIFTCARDS
  $table = $_SESSION["giftcard"]["table"];
// $trs='';
    $count =0;
    $cards = array();
    foreach ($table as $row => $value){
      if(!empty($value)){
        $count++;
        // Activar Giftcard
         $rs = db_query("SELECT * FROM  giftcard where id =".$value);
         $row = $rs->fetchObject();
         $cards[] = "<li>".$row->code.'-'.$row->id. ' '."</li>";
      }
    }

    if(empty($count)){
      drupal_set_message(t("Please , select Gift Cards to activate"), 'warning', FALSE);
      drupal_goto("admin/giftcard");
    }



$list = "<ul>";
$list .= implode('', $cards);
$list.="</ul>";

$form['giftcards'] = array(  '#markup' =>  "$list"  );

$form['amount'] = array(
    '#type' => 'textfield',
    '#title' => t('Amount:'),
    '#required' => TRUE,
    '#default_value'=> 0,
    '#size'=>30

  );


  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );

    $form['cancel'] = array(
    '#type' => 'submit',
    '#value' => 'Cancel',
  );

  return $form;
}

function giftcard_admin_addfunds_form_validate($form, &$form_state){
  
if($form_state['clicked_button']["#value"] == "Cancel"){
    $form_state['values'] = array();
    unset($_SESSION["giftcard"]);
    drupal_goto("admin/giftcard");

  }

  $value = $form_state['values']['amount'];
  if (empty($value) || !is_numeric($value)) {
    form_set_error('amount', "Only numbers please");
  }
}

function giftcard_admin_addfunds_form_submit($form, &$form_state){

if($form_state['clicked_button']["#value"] == "Cancel"){
    $form_state['values'] = array();
    unset($_SESSION["giftcard"]);
    drupal_goto("admin/giftcard");

  }else{

    $amount = $form_state['values']['amount'];
    $table = $_SESSION["giftcard"]["table"];
  // $trs='';
      $count =0;
      $cards = array();
      foreach ($table as $row => $value){
        if(!empty($value)){
          $count++;
          // Activar Giftcard
           $rs = db_query("UPDATE giftcard SET balance_value = $amount  where id =".$value);
           $cards[] = $value;
        }
      }

      drupal_set_message(t("Gift Card has been updated"), 'status', FALSE);
      drupal_goto("admin/giftcard");
    
  }
}

//#######################################################
/*
  Actualizacion de gift cards en masa START DATE
*/
function giftcard_admin_update_startdate_form($node , &$form_state){

//LISTAR GIFTCARDS
  $table = $_SESSION["giftcard"]["table"];
// $trs='';
    $count =0;
    $cards = array();
    foreach ($table as $row => $value){
      if(!empty($value)){
        $count++;
        // Activar Giftcard
         $rs = db_query("SELECT * FROM  giftcard where id =".$value);
         $row = $rs->fetchObject();
         $cards[] = "<li>".$row->code.'-'.$row->id. ' '."</li>";
      }
    }

    if(empty($count)){
      drupal_set_message(t("Please , select Gift Cards to activate"), 'warning', FALSE);
      drupal_goto("admin/giftcard");
    }



$list = "<ul>";
$list .= implode('', $cards);
$list.="</ul>";

$form['giftcards'] = array(  '#markup' =>  "$list"  );

$form['startdate'] = array(
      '#type' => 'date_popup',
      // '#date_timezone' => date_default_timezone(),
      '#date_format' => 'Y-m-d',
      '#date_year_range' => '-3:+3',
      '#title' => "Start Date:",
     

    
    );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );

    $form['cancel'] = array(
    '#type' => 'submit',
    '#value' => 'Cancel',
  );

  return $form;
}

function giftcard_admin_update_startdate_form_validate($form, &$form_state){
  
if($form_state['clicked_button']["#value"] == "Cancel"){
    $form_state['values'] = array();
    unset($_SESSION["giftcard"]);
    drupal_goto("admin/giftcard");

  }

  
}

function giftcard_admin_update_startdate_form_submit($form, &$form_state){

if($form_state['clicked_button']["#value"] == "Cancel"){
    $form_state['values'] = array();
    unset($_SESSION["giftcard"]);
    drupal_goto("admin/giftcard");

  }else{

    $amount = $form_state['values']['startdate'];
    $table = $_SESSION["giftcard"]["table"];
  // $trs='';
      $count =0;
      $cards = array();
      foreach ($table as $row => $value){
        if(!empty($value)){
          $count++;
          // Activar Giftcard
           $rs = db_query("UPDATE giftcard SET start_date = '$amount'  where id =".$value);
           $cards[] = $value;
        }
      }

      drupal_set_message(t("Gift Card has been updated to start date : ".$amount), 'status', FALSE);
      drupal_goto("admin/giftcard");
    
  }
}


//#######################################################




function giftcard_list_transaction_form($node, &$form_state){

if(empty($_SESSION["giftcard"]["transaction"]["status"]))
  $_SESSION["giftcard"]["transaction"]["status"] = "all";

$header = array(
             array('data' => t('ID'), 'field' => 'id', 'sort' => 'desc'), // sort
             array('data' => t('Code transaction'), 'field' => 'code_transaction'),
             array('data' => t('Gift Card') ),
             array('data' => t('Type'), 'field' => 'type'),
             array('data' => t('charge'), 'field' => 'charge'),
             array('data' => t('client'), ),
             array('data' => t('Status'), ),
             array('data' => t('Message Transaction'), 'field' => 'message_transaction'),
             array('data' => t('Auth code'), 'field' => 'auth_code'),
             array('data' => t('Card Type'), 'field' => 'card_type'),
             array('data' => t('Account number'), 'field' => 'account_number'),
             array('data' => t('Created'), 'field' => 'created'),
             array('data' => t('Status'), 'field' => 'state'),
             array('data' => t('Actions'), ),
           );

$form = array();
 

$form['filter'] = array(
  '#type' => 'fieldset',
  '#collapsible' => TRUE,
  '#collapsed' => FALSE,
  '#title' => t('Filter option')
);
$form['filter']['status'] = array(
  '#type' => 'select',
  '#title' => t('Status'),
  '#options' => array(
          "all" => t('all'),
          0 => t('On Request'),
          1 => t('Paid'),
          2 => t('Rejected'),
       ),
  '#default_value'=>$_SESSION["giftcard"]["transaction"]["status"],
);


$form['filter']['submit'] = array(
  '#type' => 'submit',
  '#value' => t('Filter'),
);



/*
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `code_transaction` varchar(50) DEFAULT NULL,
  `idgiftcard` int(11) DEFAULT NULL,
  `type` char(1) DEFAULT NULL COMMENT '1 charge , 2 buy',
  `charge` decimal(10,2) DEFAULT NULL,
  `client` int(11) DEFAULT NULL,
  `status` char(1) DEFAULT '0' COMMENT '0 generado 1 pagado , 2 rechazado ',
  `message_transaction` varchar(400) DEFAULT NULL,
  `auth_code` varchar(50) DEFAULT NULL,
  `card_type` varchar(20) DEFAULT NULL,
  `account_number` varchar(20) DEFAULT NULL,
  `text_post` text DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `user` int(11) DEFAULT NULL,
  `state`*/
    $query = db_select('transaction', 't');

    $query->fields('t', array('id', 'code_transaction','type','charge' , 'client' ,"status", 'message_transaction', 'auth_code', 'card_type','account_number','created','state'));
    // $query->fields('g', array('code', 'balance_value'));
    $query->fields('u', array('name'));
    $query->addField("g","id","giftid");
    $query->addField("g","code","code");
    $query->leftjoin("users" , "u" , "u.uid = t.client");
    $query->leftjoin("giftcard" , "g" , "g.id = t.idgiftcard");
    // $query->orderBy("o.created","DESC");
    // dsm($_SESSION["giftcard"]["transaction"]);
    if ($_SESSION["giftcard"]["transaction"]["status"] != "all") {
         // dsm("hola");
          $query->condition('t.status',  $_SESSION["giftcard"]["transaction"]["status"] , '=');
    }    

    $table_sort = $query->extend('TableSort') // Add table sort extender.
                        ->orderByHeader($header); // Add order by headers.
    
    $pager = $table_sort->extend('PagerDefault')
                        ->limit(25); // 5 rows per page.
    // dsm($form_state);
             


    $result = $pager->execute();        

    $rows = array();

    foreach($result as $res){
      // dsm($res->status);
      if($res->status == 0){
        $status = "On Request";
      }elseif($res->status == 1){
        $status = "Paid";
      }else{
        $status = "Rejected";
      }

      switch ($res->type) {
        case '1':
          $type = "Funds Added";
          break;
        case '2':
          $type = "e-Gift Card";
          break;
          
      }
      switch ($res->state) {
        case '0':
          $state = "Not publish";
          break;
        case '1':
          $state = "Publish";
          break;
          
      }
      $rows[$res->id] = array($res->id, 
                              $res->code_transaction,
                              $res->code . "-" . $res->giftid, 
                              $type ,
                              $res->charge,
                              $res->name,
                              $status,
                              $res->message_transaction , 
                              $res->auth_code , 
                              $res->card_type , 
                              $res->account_number , 
                              $res->created , 
                              $state , 
                              _giftcard_transaction_generate_options($res->id));

    }


$form['table'] = array(
      '#theme' => 'table',
      '#header' => $header,
      '#rows' => $rows,
      '#empty' => t('Empty Rows')
      );

$form['pager'] = array('#markup' => theme('pager'));

return $form;
}

function giftcard_list_transaction_form_submit($form, &$form_state) {
// dsm("hola");
   $_SESSION["giftcard"]["transaction"]["status"] = $form_state['values']['status'];   
   $form_state['rebuild'] = TRUE;


}


function giftcard_list_transaction_edit_form(){

$tranid = arg(4);
$rs = db_query("SELECT t.status , t.charge ,CONCAT_WS('-',g.code,g.id) codefull , u.name , t.created
  ,IFNULL(t.code_transaction,'') code_transaction
  ,IFNULL(t.auth_code,'') auth_code
  FROM transaction t 
  left join giftcard g on g.id = t.idgiftcard
  left join users u  on u.uid = t.client
  where t.id=".$tranid);
$tran = $rs->fetchObject();

$html = <<<EOD
<div><span style="font-weight:bold">Gift Card: </span>{$tran->codefull}</div>
<div><span style="font-weight:bold">Charge: </span>{$tran->charge}</div>
<div><span style="font-weight:bold">Client: </span>{$tran->name}</div>
<div><span style="font-weight:bold">Created: </span>{$tran->created}</div>

EOD;


  $form['hmtl'] = array('#markup' => $html);


$form['tranid'] = array(
    '#type' => 'hidden',
    '#value' => $tranid,
  );



$form['code_transaction'] = array(
    '#type' => 'textfield',
    '#title' => t('Code transaction:'),
    // '#required' => TRUE,
    '#default_value'=>$tran->code_transaction,
  );

$form['auth_code'] = array(
    '#type' => 'textfield',
    '#title' => t('Authorize code:'),
    // '#required' => TRUE,
    '#default_value'=>$tran->auth_code,
  );



$form['filter']['status'] = array(
  '#type' => 'select',
  '#title' => t('Status'),
  '#options' => array(
          // "all" => t('all'),
          0 => t('On Request'),
          1 => t('Paid'),
          2 => t('Rejected'),
       ),
  '#default_value'=>$tran->status,
);

$form['message_transaction'] = array(
    '#type' => 'textarea',
    '#title' => t('Message Transaction:'),
    '#required' => TRUE,
    // '#default_value'=>0
  );
  // Adds a simple submit button that refreshes the form and clears its contents -- this is the default behavior for forms.
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );

return $form;
}

function giftcard_list_transaction_edit_form_validate($form, &$form_state){
   $values = $form_state['values'];
   $tranid = $form_state['values']['tranid'];
   $rs = db_query("SELECT t.status , t.type,t.charge ,CONCAT_WS('-',g.code,g.id) codefull , u.name , t.created, g.id giftid 
  FROM transaction t 
  left join giftcard g on g.id = t.idgiftcard
  left join users u  on u.uid = t.client
  where t.id=".$tranid);
$tran = $rs->fetchObject();
  //NO SE PUEDE REACTUALIZAR UN PEDIDO YA ENTREGADO
  if($values["status"] ==  $tran->status){
    form_set_error('warning', 'Please , Change the status before  updating');
  }elseif($values["status"] == 0){
    form_set_error('warning', 'Please , Cannot back down to on request');

  } 
} 

function giftcard_list_transaction_edit_form_submit($form, &$form_state) {


$tranid = $form_state['values']['tranid'];
$code_transaction = $form_state['values']['code_transaction'];
$auth_code = $form_state['values']['auth_code'];
$status = $form_state['values']['status'];
$message_transaction = $form_state['values']['message_transaction'];
//update trasaction
$rs  = db_query("UPDATE transaction set 
                  code_transaction = $code_transaction ,
                  auth_code = $auth_code , 
                  status = $status ,
                  message_transaction = '$message_transaction' 
                  where id = $tranid");

// $tranid = arg(4);
$rs = db_query("SELECT  t.status , t.type,t.charge ,CONCAT_WS('-',g.code,g.id) codefull , u.name , t.created, g.id giftid 
  FROM transaction t 
  left join giftcard g on g.id = t.idgiftcard
  left join users u  on u.uid = t.client
  where t.id=".$tranid);
$tran = $rs->fetchObject();

//actualizacion por tipo de status
if($status == 1) {
  // Registro de pago aceptado , se aumenta charge 
  giftcard_register_detail(
    $idgiftcard = $tran->giftid, 
    $type  = $tran->type, 
    $description = 'Update transaction manually' , 
    $charge = $tran->charge , 
    $idorder  = 0 , 
    $idtransaction = $tranid  );

db_query("UPDATE giftcard set balance_value = balance_value + ".$tran->charge." where id = ".$tran->giftid);


}elseif($status == 2){
 // si es rechazado
 // busca si existe agregacion de monto  , si existio disminuirlo
$rs  = db_query("SELECT * FROM giftcard_detail where state  = 1 and idtransaction=".$tranid );
$row = $rs->fetchObject();

if(!empty($row)){
  // disminuyo el balance del giftcard
  db_query("UPDATE giftcard set balance_value = balance_value - ".$row->charge." where id = ".$row->idgiftcard);
  //actualizo el detalle
  db_query("UPDATE giftcard_detail set state = 0 where id = ".$row->id);
  //agrego nuevo detalle
  giftcard_register_detail(
    $idgiftcard = $row->idgiftcard, 
    $type  = 3, 
    $description = 'Pass status transacction to Reject' , 
    $charge = $row->charge , 
    $idorder  = 0 , 
    $idtransaction = $tranid  );
}


}elseif($status == 0){
  // Pasar a pendiente
}




 drupal_set_message(t("The Transaction has been updated."), 'status', FALSE);
 drupal_goto("admin/giftcard/transaction");
 
}


function giftcard_page_send_egiftcard_form($node, &$form_state){

  global $user; 

$form['filter'] = array(
  '#type' => 'fieldset',
  '#collapsible' => false,
  '#collapsed' => FALSE,
  '#title' => t('Recipient Info:')
);


$form['filter']['username'] = array(
          '#type' => 'textfield',
          '#title' => t('Your Name:'),
          '#required' => TRUE,
          '#default_value'=>$user->name,
          //'#attributes' => array('class'=>array('part2'),'placeholder'=>array('..-.......-....')),

        );


$form['filter']['name'] = array(
          '#type' => 'textfield',
          '#title' => t('Friend\'s Name:'),
          // '#required' => TRUE,
          '#default_value'=>"",
          //'#attributes' => array('class'=>array('part2'),'placeholder'=>array('..-.......-....')),

        );


$form['filter']['email'] = array(
          '#type' => 'textfield',
          '#title' => t('Friend\'s E-mail:'),
          // '#required' => TRUE,
          // '#default_value'=>"5.00",
          //'#attributes' => array('class'=>array('part3'),'placeholder'=>array('$5.00 is the minimum charge required')),

        );
$form['filter']['message'] = array(
          '#type' => 'textarea',
          '#title' => t('Message:'),
          '#required' => TRUE,
          '#default_value'=>"",
          //'#attributes' => array('class'=>array('part2'),'placeholder'=>array('..-.......-....')),

        );

$form['filter']['cards'] = array(
  '#type' => 'radios',
  '#title' => t('Cards:'),
  '#required' => TRUE,
  
  '#options' => array(
          1 => t('Thinking of you'),
          2 => t('Thinking about you'),
          3 => t('Happy birthday'),
          4 => t('Congratulations'),
          5 => t('Thank you'),
          6 => t("Happy father's day"),
          7 => t("Merry christmas"),
          8 => t("Happy new year"),
       ),
);

$form['cant'] = array(
  '#type' => 'fieldset',
  '#collapsible' => false,
  '#collapsed' => FALSE,
  '#title' => t('Select the amount:')
);

$form['cant']['amount'] = array(
          '#type' => 'textfield',
          '#title' => t('Amount:'),
          '#required' => TRUE,
          // '#default_value'=>"5.00",
          '#attributes' => array('class'=>array(''),'placeholder'=>array('$5.00 is the minimum charge required')),

        );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Go to Payment Gateway',
  );

  return $form;

}
function giftcard_page_send_egiftcard_form_validate($form, &$form_state){

$mail = $form_state['values']['email'];
  if (!valid_email_address($mail)) {
    form_set_error('email', t('The email address appears to be invalid.'));
  }

   $value = $form_state['values']['amount'];
  if (empty($value) || !is_numeric($value)) {
    form_set_error('amount', "Field Amount: Only numbers please.");
  }

}

function giftcard_page_send_egiftcard_form_submit($form, &$form_state){



global $user;
// GENERAR INVOICEORDER

//ACTUALIZAR DATOS DE USUARIO
$account = user_load($user->uid);
user_save($account, array("name"=>$form_state["values"]['username']));

$idtransaction = db_insert('transaction') // Table name no longer needs {}
          ->fields(array(
            'idgiftcard' => 0,
            'type' => 2, //It is a buy egiftcard 
            'charge' => $form_state["values"]['amount'],
            'client' => $user->uid,
            'created' => date('Y-m-d H:i:s'),
            'user' => $user->uid,
          ))
          ->execute();


$idegift = db_insert('egiftcard') // Table name no longer needs {}
          ->fields(array(
            'name' => $form_state["values"]['name'],
            'email' => $form_state["values"]['email'], //It is a buy egiftcard 
            'amount' => $form_state["values"]['amount'],
            'message' => $form_state["values"]['message'],
            'type' => $form_state["values"]['cards'],
            'idtransaction' => $idtransaction,
            'idgiftcard' => 0,
            'status' => 0,
            'created' => date('Y-m-d H:i:s'),
            'user' => $user->uid,
          ))
          ->execute();


$_SESSION['transaction'] = $form_state["values"];
$_SESSION['transaction']["invoice"] = $idtransaction;
$_SESSION['transaction']["type"] = "buy egiftcard";

drupal_goto("myaccount/fundssend");




}

function giftcard_page_send_egiftcard_receipt(){

}

function giftcard_authorizenet_senddata(){

if(empty($_SESSION['transaction']))
  exit();


require_once 'anet_php_sdk/AuthorizeNet.php'; // Include the SDK you downloaded in Step 2
$api_login_id = '3LunE32TE4';
$transaction_key = '977n9uYxMk866Uev';
$amount = $_SESSION['transaction']['amount'];
$fp_timestamp = time();
$fp_sequence = $_SESSION['transaction']['invoice'];// Enter an invoice or other unique number.
$fingerprint = AuthorizeNetSIM_Form::getFingerprint($api_login_id,
  $transaction_key, $amount, $fp_sequence, $fp_timestamp);
global $user, $base_url;

$html= <<<EOD
<h3> Please , wait a moment .... </h3>
<form id='frm-addfunds' style="display:none;" name='frm-addfunds' method='post' action="https://secure.authorize.net/gateway/transact.dll">
<input type='hidden' name="x_login" value="{$api_login_id}" />
<input type='hidden' name="x_fp_hash" value="{$fingerprint}" />
<input type='hidden' name="x_amount" value="{$amount}" />
<input type='hidden' name="x_fp_timestamp" value="{$fp_timestamp}" />
<input type='hidden' name="x_fp_sequence" value="{$fp_sequence}" />
<input type='hidden' name="x_invoice_num" value="{$fp_sequence}" />
<INPUT TYPE=HIDDEN NAME="x_description" VALUE="Send e-Gift Cards.">
<input type='hidden' name="x_version" value="3.1">
<input type='hidden' name="x_method" value="cc">
<input type='hidden' name="x_show_form" value="payment_form">
<INPUT TYPE=HIDDEN NAME="x_cust_id" VALUE="{$user->uid}">
<INPUT TYPE=HIDDEN NAME="x_receipt_link_method" VALUE="POST">
<INPUT TYPE=HIDDEN NAME="x_receipt_link_text" VALUE="Click here to return to our home page">
<INPUT TYPE=HIDDEN NAME="x_receipt_link_URL" VALUE="{$base_url}/myaccount/fundsreceipt">

<INPUT TYPE=HIDDEN NAME="x_header_html_payment_form" VALUE="Payment Gateway<style>
#divMerchantHeader{background:#f5f5f5; color:#97310e;margin-top: 15px;}
#divPage{background:#fff;}</style>">
<INPUT TYPE=HIDDEN NAME="x_color_background" VALUE="#E3E9F1">
<INPUT TYPE=HIDDEN NAME="x_logo_url" VALUE="http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/logosmall.png">
<INPUT TYPE=HIDDEN NAME="x_cancel_url" VALUE="http://www.dealcountry.com/myaccount">
<INPUT TYPE=HIDDEN NAME="x_cancel_url_text" VALUE="Return to Dealcountry">


<input type='submit' value="Click here for the secure payment form">
</form>
<script>
  jQuery('#frm-addfunds').submit();
</script>
EOD;

// <INPUT TYPE=HIDDEN NAME="x_header_html_payment_form" VALUE="x_header_html_payment_form">
// <INPUT TYPE=HIDDEN NAME="x_footer_html_payment_form" VALUE="x_footer_html_ payment_form">
// <INPUT TYPE=HIDDEN NAME="x_header2_html_payment_form" VALUE="x_header2_html_payment_form">
// <INPUT TYPE=HIDDEN NAME="x_footer2_html_payment_form" VALUE="x_footer2_html_payment_form">
// <INPUT TYPE=HIDDEN NAME="x_color_background" VALUE="#E3E9F1">

unset($_SESSION['transaction']);
return $html;

}

// function giftcard_validacion_pago(){
function giftcard_authorizenet_receipt(){
//VALIDAR VALID INFORMATION OF AUTHORIZE NET




// VALIDATE TRNSACTION RESPONSE

// VALIDATE MESSAGE TO SHOW  

// VALIDAR TRANSACCION YA REGISTRADA


global $user;

   $data = $_POST;
   $datajson = json_encode($data);

//validnado existencia de invoice
if(empty($data['x_invoice_num']))
  die();
//validar pago ya registrado
$sql = "select * from transaction where id =".$data['x_invoice_num'];
$rs = db_query($sql);
$row = $rs->fetchObject();
if($row->status != 0){
drupal_set_message(t("Your transaction has been completed already"), 'status', FALSE);
drupal_goto("myaccount");
return "";
}


$num_updated = db_update('transaction') // Table name no longer needs {}
  ->fields(array(
     'code_transaction' => $data['x_trans_id'],
     'status' => $data['x_response_code'],
     'message_transaction' => $data['x_response_reason_text'],
     'auth_code' => $data['x_auth_code'],
     'card_type' => $data['x_card_type'],
     'account_number' => $data['x_account_number'],
     'code_transaction' => $data['x_trans_id'],
     'text_post' => $datajson,
  ))
  ->condition('id',$data['x_invoice_num'], '=')
  ->execute();

// UPDATE BALANCE IN GIFRCARD AND DETAILS
$sql = "select * from transaction where id =".$data['x_invoice_num'];
$rs = db_query($sql);
$row = $rs->fetchObject();


// SI ES UNA RECARGAR
if($row->type == 1){

  db_query("update giftcard set balance_value = balance_value + ".$data['x_amount']." where id = ".$row->idgiftcard);
  giftcard_register_detail($row->idgiftcard , $type = 2 , $description = 'Add funds' , $data['x_amount'] , $idorder  = 0 , $data['x_invoice_num']  );     
  // VER SI PROVIENE DE UNA COMPRA PENDIENTE
  if(!empty($_SESSION["pendent_order"])){
    drupal_set_message(t("Your transaction has been completed. Thank you!"), 'status', FALSE);
    $nid = $_SESSION["pendent_order"];
    unset($_SESSION["pendent_order"]);
    drupal_goto("giftcard/order/".$nid);
  }

}else{ 
//si es una compra
$prefix = "EG";
$service_fee = 0;
//se crea giftcard
$code = strtoupper($prefix)."-" .rand(100000,999999);
$idgiftcard = db_insert('giftcard') // Table name no longer needs {}
          ->fields(array(
            'code' => $code,
            'original_value' => $row->charge,
            'balance_value' => $row->charge,
            'start_date' => date("Y-m-d"),
            // 'end_date' => '',
            'service_fee' => $service_fee,
            'status' => 1,
            'created' => date('Y-m-d H:i:s'),
            'user' => $user->uid,
            'observation' => 'e-Gift Card created',
          ))
          ->execute();
//SE CREA DETALLE DE CRECION DE E-GIFTCARD
$nid = db_insert('giftcard_detail') // Table name no longer needs {}
          ->fields(array(
            'idgiftcard' => $idgiftcard,
            'type' => 6, // 6 compra ( 1 uso ,2 regarga ,3 disminucion , 4  expiracion, 5 taxes o shipping ,6 compra)
            'concept' => "Buy e-Gift card",
            'charge' => $row->charge,
            'idorder' => 0,
            'idtransaction' => $data['x_invoice_num'],
            'state' => 1,
            'created' => date('Y-m-d H:i:s'),
            'user' => $user->uid,
          ))
          ->execute();

// se actualiza transaction y egiftcards
db_update('transaction') // Table name no longer needs {}
  ->fields(array(
     'idgiftcard' => $idgiftcard,
  ))
  ->condition('id',$data['x_invoice_num'], '=')
  ->execute();

db_update('egiftcard') // Table name no longer needs {}
  ->fields(array(
     'idgiftcard' => $idgiftcard,
     'status' => 1,
     'updated' => date("Y-m-d_H:i:s"),
  ))
  ->condition('idtransaction',$data['x_invoice_num'], '=')
  ->execute();


//Envio de emails: comprador , amigo , dealcountry stuff 
$sql = "select eg.email , eg.name   , g.code , g.id , eg.amount , eg.message , eg.type
from egiftcard eg 
left join giftcard g on g.id = eg.idgiftcard
where eg.idtransaction =".$data['x_invoice_num'];
$rs = db_query($sql);
$eg = $rs->fetchObject();

//Comprador 
  $to = $user->mail;
  $from = '"Dealcountry" <support@dealcountry.com>';
  global $base_url;
  $url = $base_url . '/sites/all/modules/custom/giftcard/egiftcard-cliente.html';
  $tpl = file_get_contents($url);

   //$tpl = file_get_contents('egiftcard-cliente.html');
    //DATOS DE LA VARIANTE A COMPRAR
    $variables['[LOGO]'] ="http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/logosmall.png";
    $variables['[cliente_nombre]'] = $eg->name;
    $variables['[cliente_descripcion]'] = $eg->message;
    $variables['[cliente_email]'] = $eg->email;
    $variables['[cliente_tarjeta]'] = _giftcard_get_url_card($eg->type);
    $variables['[imagen_separacion_inicio]'] =  "http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/adorno-up.jpg";
    $variables['[imagen_separacion_final]'] = "http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/adorno-down.jpg";
    $variables['[imagen_carita]'] = "http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/gift-smile.gif";
    $variables['[user_name]'] = $user->name;

    $body = str_replace(array_keys($variables),array_values($variables),$tpl);
    $params = array(
    'subject' => $eg->name . " has received your $".$eg->amount." dealcountry.com E-Gift Card. ",
    'body' => $body ,
    // 'gifcard'=>$values["giftcard"],
    );
  drupal_mail('giftcard', 'orders', $to, language_default(), $params, $from, TRUE);
/********************/


//Amigo 
  $to = $eg->email;
  //$from = 'noreply@dealcountry.com';
  $tpl = file_get_contents($base_url . '/sites/all/modules/custom/giftcard/egiftcard-beneficiario.html');
   //$tpl = file_get_contents('egiftcard-cliente.html');
    //DATOS DE LA VARIANTE A COMPRAR
    $variables['[cliente_nombre]'] = $eg->name;
    $variables['[cliente_descripcion]'] = $eg->message;
    $variables['[cliente_email]'] = $eg->email;
    $variables['[cliente_tarjeta]'] = _giftcard_get_url_card($eg->type);
    $variables['[user_name]'] = $user->name;
    $variables['[giftcard_number]'] = $eg->code."-".$eg->id;

    $body = str_replace(array_keys($variables),array_values($variables),$tpl);
    $params = array(
      'subject' => 'You have recieved a $'.$eg->amount . " dealcountry.com E-Gift Card from <b>".$user->name."</b>",
      'body' => $body,
      
      );
  drupal_mail('giftcard', 'orders', $to, language_default(), $params, $from, TRUE);
/********************/
//stuff
    $to = variable_get('giftcard_mail', 'luismori@gmail.com');
    //$from = 'noreply@dealcountry.com';
    $params = array(
    'subject' => 'DealCountry : E-GIFT CARD has been bought',
    'body' => "A E-Gift Card has been bought. Code ".$eg->code."-".$eg->id. '<br /> <br />  
Best Regards,<br> <br>  
Client Services <br>  
<a href="http://www.dealcountry.com">www.dealcountry.com</a><br>
<img src="http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/logosmall.png" alt="" width="140">
<br />    
Come Tour all the great deals! 
    ',
    // 'gifcard'=>$values["giftcard"],
    );
    drupal_mail('giftcard', 'orders', $to, language_default(), $params, $from, TRUE);

    drupal_set_message(t("Please check your Email for a record of your order."), 'status', FALSE);

}


drupal_set_message(t("Your transaction has been completed. Thank you!"), 'status', FALSE);
drupal_goto("myaccount");
return "";



}



function giftcard_ordenes_pendientes($codeID){
  
  if(empty($codeID)){
    drupal_set_message(t("We have a problem with the Gift Card number : $codeID . Please contact with the administrator"), 'status', FALSE);
    return false;
  }

  $sql = "select 1 from orders o where o.status = 1 and o.idgiftcard = $codeID";

  $result = db_query($sql);
  
  $cant = $result->rowCount();
  
  if($cant){
    return true;
  }

  return false;
}



function _giftcard_get_url_card($type){

global $base_url;

  switch ($type) {
    case '1':
      $url = "http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/GC-thinking-of-you.jpg";
      break;
    case '2':
      $url = "http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/GC-thinking-about-you.jpg";
      break;
    case '3':
      $url = "http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/GC-happy-birthday.jpg";
      break;
    case '4':
      $url = "http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/GC-congratulations.jpg";
      break;
    case '5':
      $url = "http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/GC-thinking-you.jpg";
      break;
    case '6':
      $url = "http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/GC-happy-fathers-day.jpg";
      break;
    case '7':
      $url = "http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/GC-merry-christmas.jpg";
      break;
    case '8':
      $url = "http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/GC-happy-new-year.jpg";
      break;
    
    default:
      $url = "http://www.dealcountry.com/sites/all/themes/bootstrap_dealcountry/images/GC-thinking-of-you.jpg";
      break;
  }

  return $url;

}




/*
*Agrega 2 años a la fecha start date de un gift card
*/
function _giftcard_service_fee_start_date($giftid){
  $sql = "select * from giftcard where id = $giftid";
  $rs = db_query($sql);
  $gif =  $rs->fetchObject();
  $start_date = $gif->start_date;
  if(empty( $start_date))
     $start_date = date("Y-m-d");
   
  $fecha_Final = date('Y-m-d',strtotime('+2 years', strtotime($start_date)));

  return $fecha_Final;

}

/*
Registro de Compras 
*/
function giftcard_list_orders_add_form($form_state){

 $form['code'] = array(
    '#type' => 'textfield',
    '#title' => t('Code start with:'),
    '#required' => TRUE,
    '#size'=>5
  ); 
 $form['giftcardvalue'] = array(
    '#type' => 'textfield',
    '#title' => t('Gift Card value:'),
    '#required' => TRUE,
    '#default_value'=>0,
    '#size'=>10

  ); 
 $form['generatecant'] = array(
    '#type' => 'textfield',
    '#title' => t('Numbers of Gift Card:'),
    '#required' => TRUE,
    '#default_value'=>1,
    '#size'=>10

  );


    $dateformat = 'Y-m-d';
    $timestamp = time(); // <- as example, usually this is a db value
    $label = t('Custom date');
    $dbv = $timestamp;
    $value = NULL;
    // construct date, if db value is empty, default to now
    if (empty($dbv)) {
      $d = new DateTime('@'.$dbv);
      $value = $d->format($dateformat);
    } else {
      $d = new DateTime();
      $value = $d->format($dateformat);
    }
    $form['startdate'] = array(
      '#type' => 'date_popup',
      // '#date_timezone' => date_default_timezone(),
      '#date_format' => $dateformat,
      '#date_year_range' => '-3:+3',
      '#title' => "Start Date:",
      '#default_value' => $value,
      '#required' => TRUE,
    );



  $form['enddate'] = array(
    '#type' => 'date_popup',
    '#title' => t('End date:'),
    '#date_format' => $dateformat,
    '#date_year_range' => '-3:+3',
    // '#required' => TRUE,
  );

 $form['servicefee'] = array(
    '#type' => 'textfield',
    '#title' => t('Service fee:'),
    '#required' => TRUE,
    '#default_value'=>0,
    '#size'=>10

  );



  // Adds a simple submit button that refreshes the form and clears its contents -- this is the default behavior for forms.
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'Submit',
  );
  return $form;
}





